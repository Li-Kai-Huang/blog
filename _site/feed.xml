<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-TW"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" hreflang="zh-TW" /><updated>2025-06-14T23:16:14+08:00</updated><id>http://localhost:4000/blog/feed.xml</id><title type="html">LI KAI 部落格</title><subtitle>這是一個使用 Jekyll 和 Hydure 主題建立的個人部落格， 用來分享我的學習筆記、生活觀察與技術心得。</subtitle><author><name>Li Kai_Huang</name><email>moray.huang@gmail.com</email></author><entry><title type="html">Edge AI Class 快速導覽</title><link href="http://localhost:4000/blog/AI-Class/" rel="alternate" type="text/html" title="Edge AI Class 快速導覽" /><published>2025-06-13T15:40:00+08:00</published><updated>2025-06-13T15:40:00+08:00</updated><id>http://localhost:4000/blog/edge-computing-class-project</id><content type="html" xml:base="http://localhost:4000/blog/AI-Class/"><![CDATA[<h1 id="edge-ai-class">Edge AI Class</h1>
<p>這學期的專題作業</p>

<ul>
  <li><a href="#edge-ai-class">Edge AI Class</a>
    <ul>
      <li><a href="#edgeai-mcu-system-diagram">EdgeAI MCU System Diagram</a></li>
      <li><a href="#ai-輔助分類回收系統">AI 輔助分類回收系統</a></li>
      <li><a href="#ai-監視錄影系統">AI 監視錄影系統</a></li>
      <li><a href="#ai-看圖說故事">AI 看圖說故事</a></li>
      <li><a href="#ai-輔助英語教學">AI 輔助英語教學</a></li>
      <li><a href="#ai-情緒感知音樂播放器">AI 情緒感知音樂播放器</a></li>
      <li><a href="#ai-盲人導航系統">AI 盲人導航系統</a></li>
      <li><a href="#ai-盲人視覺輔助系統">AI 盲人視覺輔助系統</a></li>
      <li><a href="#總體心得">總體心得</a></li>
    </ul>
  </li>
</ul>

<h2 id="edgeai-mcu-system-diagram">EdgeAI MCU System Diagram</h2>

<pre><code class="language-mermaid">graph TD
    subgraph EdgeAI MCU System
        AMB82_mini --&gt;|連接| 4_2_寸螢幕
        AMB82_mini --&gt;|連接| 鏡頭
        AMB82_mini --&gt;|連接| 按鈕
        AMB82_mini --&gt;|連接| SD_card
        AMB82_mini --&gt;|連接| 喇叭
        AMB82_mini --&gt;|連接| Wifi_模組
        Wifi_模組 --&gt; Gemini
    end
</code></pre>

<h2 id="ai-輔助分類回收系統"><a href="project1/index.html">AI 輔助分類回收系統</a></h2>
<p>本報告旨在介紹一個基於邊緣 AI 技術的輔助回收系統。該系統利用 <strong>Realtek AMB82_mini</strong> 微控制器作為核心處理單元，整合影像辨識與語音互動功能，旨在實現對回收物品的自動識別與語音指引，從而提升回收效率與正確性。</p>

<h2 id="ai-監視錄影系統"><a href="project2/index.html">AI 監視錄影系統</a></h2>
<p>本報告旨在介紹一個基於人工智慧的智慧型監視錄影系統。該系統利用先進的影像捕捉與雲端 AI 分析技術，實現對環境變化的自動化監測與記錄。不同於傳統錄影系統的持續錄製，本系統透過每分鐘捕捉影像並傳送至 Google Gemini Vision 進行智慧分析，僅在偵測到場景發生實質性變化時才儲存相關影像與文字描述。</p>

<h2 id="ai-看圖說故事"><a href="project3/index.html">AI 看圖說故事</a></h2>
<p>本報告旨在介紹一個創新的AI 看圖說故事系統。該系統旨在將視覺內容轉化為富有想像力的故事情節，為使用者提供獨特的互動體驗。透過按下按鈕捕捉影像，系統會將圖像傳送至強大的 Google Gemini Vision AI 進行分析，並由 AI 根據圖像內容即時編寫一個童話故事</p>

<h2 id="ai-輔助英語教學"><a href="project4/index.html">AI 輔助英語教學</a></h2>
<p>本報告旨在介紹一款創新的AI 輔助英語教學系統，旨在為英語學習者提供即時、互動且個性化的學習體驗。該系統的核心功能是結合視覺辨識、語音合成與自然語言處理能力，模擬一位智能家教。當使用者按下按鈕拍攝單字卡影像後，系統會立即將圖像傳送至 Google Gemini Vision 進行單字辨識，隨後透過系統會將辨識出的單字發送至 Google Gemini LLM，由 AI 即時生成一個例句。</p>

<h2 id="ai-情緒感知音樂播放器"><a href="project5/index.html">AI 情緒感知音樂播放器</a></h2>
<p>本報告旨在介紹一款創新的AI 情緒感知音樂播放器。該系統旨在透過人工智慧分析用戶當前的情緒狀態，並據此智能推薦並播放儲存在本地 SD 卡中的相應音樂，為使用者提供個性化的音樂聆聽體驗。其核心機制是捕捉用戶影像並傳送至 Google Gemini 進行情緒偵測，隨後 AI 會根據偵測到的情緒，從預設的歌曲清單中推薦最符合當前情感的歌曲名稱。</p>

<h2 id="ai-盲人導航系統"><a href="project6/index.html">AI 盲人導航系統</a></h2>
<p>本報告旨在介紹一款專為視障人士設計的AI 盲人導航系統。該系統旨在提供即時的語音定位輔助，幫助視障者更獨立、安全地探索周遭環境。其核心功能是透過掃描特定地點的二維碼 (QR Code)，迅速獲取二維碼內嵌的文字資訊（即地點名稱）。隨後，系統會利用文字轉語音 (Text-to-Speech, TTS) 技術將這個地點名稱轉換為清晰的語音指令，並立即透過音訊輸出裝置播放出來。</p>

<h2 id="ai-盲人視覺輔助系統"><a href="project7/index.html">AI 盲人視覺輔助系統</a></h2>
<p>本報告旨在介紹一款創新且多功能的AI 盲人視覺輔助系統。該系統旨在透過整合多種感官輸入與先進人工智慧，為視障人士提供即時、全面的環境感知與語音導引。其核心功能包括：透過觸摸感應觸發系統；隨後，系統會拍攝當前影像並傳送至 Google Gemini Vision 詢問現場狀況；同時，它會將實時時鐘 (RTC) 時間資訊發送給 Gemini，以獲得時間相關的回應；更進一步地，系統支援麥克風錄製用戶語音並傳送給 Gemini 進行理解，AI 將返回相關文本回應，最終所有來自 Gemini 的文本都將透過文字轉語音 (TTS) 播放出來</p>

<h2 id="總體心得">總體心得</h2>
<p>這學期在邊緣運算課程中進行的七個專題實作，是一段極具挑戰性且收穫豐盛的學習旅程。透過這些專案，我對 Edge AI 的核心概念、微控制器 (MCU) 的應用，以及 雲端 AI 服務 (如 Google Gemini) 的整合有了更深層次的理解。</p>

<p>首先，AMB82_mini 作為核心開發板，展現了其在邊緣端處理能力與連結雲端服務的強大潛力。從最初的硬體架設，包括連接鏡頭、按鈕、SD 卡、喇叭和 Wi-Fi 模組，到後續的軟體編程，每一個環節都讓我對嵌入式系統的複雜性與精妙之處有了更直觀的認識。尤其是 Wi-Fi 模組與 Gemini 雲端服務的串接，是實現所有 AI 應用功能的關鍵，這讓我體會到邊緣端與雲端協同運作的重要性。</p>

<p>這七個專案涵蓋了 AI 在不同應用場景的多元性，每一個都解決了特定的問題並提供了獨特的價值：</p>

<ul>
  <li>AI 輔助分類回收系統：讓我了解到 AI 在環保領域的實用性，如何透過視覺辨識提升回收效率。</li>
  <li>AI 監視錄影系統：改變了我對傳統監控的認知，理解到「事件驅動」的智慧監控能有效節省資源。</li>
  <li>AI 看圖說故事：這是一個極富創意的專案，讓我看到 AI 不僅能分析，更能進行創造性地內容生成，為娛樂和教育帶來無限可能。</li>
  <li>AI 輔助英語教學：透過結合視覺辨識、語音合成和 LLM 造句，展現了 AI 在個性化教學輔助上的潛力，這是我個人認為最實用且具前景的應用之一。</li>
  <li>AI 情緒感知音樂播放器：這個專案讓我思考 AI 如何理解人類情感並給予「情緒回應」，為用戶提供更貼心的互動體驗。</li>
  <li>AI 盲人導航系統：雖然功能較為單一（掃描二維碼播報位置），但其對社會弱勢群體的幫助意義重大，讓我意識到科技應以人為本。</li>
  <li>
    <p>AI 盲人視覺輔助系統：這是最複雜但也最令人印象深刻的專案，整合了觸摸、影像、時間和語音等多模態輸入，讓 AI 成為視障者的「眼睛」和「耳朵」，提供全面且即時的環境感知。
在實作過程中，我也面臨了許多挑戰，例如：</p>
  </li>
  <li>硬體調試：確保各個模組（尤其是攝影機和音訊）能穩定工作並與 MCU 正確通訊。</li>
  <li>網路連線與 API 呼叫：穩定可靠地連接 Wi-Fi 並與 Google Gemini / TTS API 進行高效的數據交換，是影響系統響應速度的關鍵。</li>
  <li>AI Prompt 設計：如何精確地撰寫 Prompt，讓 Gemini 按照預期返回所需的資訊（例如：情緒偵測後的歌曲推薦、單字造句、現場狀況描述），需要反覆嘗試和優化。</li>
  <li>資源管理：在有限的 MCU 資源下，如何處理影像、音訊等大量數據，並確保系統的穩定性與流暢性。</li>
  <li>錯誤處理與異常應對：考量網路不穩定、API 返回錯誤等情況，設計 robust 的錯誤處理機制。</li>
</ul>

<p>總之，這些專案不僅加深了我對邊緣 AI 技術的理解，更培養了我解決問題、系統整合和跨領域協作的能力。我學會了如何從一個抽象的想法開始，逐步拆解問題，選擇合適的硬體與軟體工具，最終將概念轉化為具體的應用。這次專題作業讓我對 AI 在未來生活中的無限可能性充滿期待，也激發了我未來繼續深入探索 Edge AI 領域的熱情。</p>]]></content><author><name>Li Kai_Huang</name><email>moray.huang@gmail.com</email></author><category term="1131邊緣運算課" /><category term="入門" /><category term="學習" /><category term="blog" /><summary type="html"><![CDATA[這篇文章會講解我邊緣運算的7個sideproject]]></summary></entry><entry><title type="html">我的第一篇部落格文章：撰寫指南與 Markdown 簡介</title><link href="http://localhost:4000/blog/%E7%AD%86%E8%A8%98/%E7%B6%B2%E9%A0%81/2025/06/13/my-first-blog-post-and-markdown-guide.html" rel="alternate" type="text/html" title="我的第一篇部落格文章：撰寫指南與 Markdown 簡介" /><published>2025-06-13T11:30:00+08:00</published><updated>2025-06-13T11:30:00+08:00</updated><id>http://localhost:4000/blog/%E7%AD%86%E8%A8%98/%E7%B6%B2%E9%A0%81/2025/06/13/my-first-blog-post-and-markdown-guide</id><content type="html" xml:base="http://localhost:4000/blog/%E7%AD%86%E8%A8%98/%E7%B6%B2%E9%A0%81/2025/06/13/my-first-blog-post-and-markdown-guide.html"><![CDATA[<h1 id="歡迎來到我的部落格">歡迎來到我的部落格！</h1>

<p>這是我使用 Jekyll 和 Hydure 主題搭建的第一篇測試文章。我會在這裡分享一些關於如何撰寫部落格文章的簡單指南，並介紹基本的 Markdown 語法。</p>

<hr />

<h2 id="如何撰寫新的部落格文章">如何撰寫新的部落格文章？</h2>

<p>要寫一篇新的文章非常簡單，請遵循以下步驟：</p>

<ol>
  <li>
    <p><strong>創建檔案</strong>：
在您的部落格專案資料夾中，找到 <code class="language-plaintext highlighter-rouge">_posts</code> 資料夾。
在這個資料夾裡，創建一個新的 Markdown 檔案（副檔名為 <code class="language-plaintext highlighter-rouge">.md</code> 或 <code class="language-plaintext highlighter-rouge">.markdown</code>）。</p>
  </li>
  <li><strong>命名規則</strong>：
檔案名稱必須遵循特定的格式：<code class="language-plaintext highlighter-rouge">YYYY-MM-DD-您的文章標題.md</code>。
    <ul>
      <li><code class="language-plaintext highlighter-rouge">YYYY-MM-DD</code>：文章發布的日期，例如 <code class="language-plaintext highlighter-rouge">2025-06-13</code>。</li>
      <li><code class="language-plaintext highlighter-rouge">您的文章標題</code>：用連字號 <code class="language-plaintext highlighter-rouge">-</code> 連接的英文標題，例如 <code class="language-plaintext highlighter-rouge">my-first-blog-post</code>。
所以，完整檔案名看起來會像這樣：<code class="language-plaintext highlighter-rouge">2025-06-13-my-first-blog-post.md</code>。</li>
    </ul>
  </li>
  <li><strong>添加 YAML Front Matter</strong>：
每篇文章的最上方，必須有一個由三個連字號 <code class="language-plaintext highlighter-rouge">---</code> 包裹的區塊，稱為 YAML Front Matter。這個區塊用來定義文章的元數據（metadata）。
例如：
    <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">文章的標題</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">YYYY-MM-DD HH:MM:SS +時區偏移</span>
<span class="na">categories</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">分類一</span><span class="pi">,</span> <span class="nv">分類二</span><span class="pi">]</span>
<span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">標籤一</span><span class="pi">,</span> <span class="nv">標籤二</span><span class="pi">]</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">文章的簡短描述，用於預覽或 SEO。</span>
<span class="na">mathjax</span><span class="pi">:</span> <span class="kc">false</span> <span class="c1"># 如果需要公式顯示，改為 true</span>
<span class="na">comments</span><span class="pi">:</span> <span class="kc">true</span> <span class="c1"># 如果需要評論，改為 true</span>
<span class="nn">---</span>
</code></pre></div>    </div>
    <p>請確保 <code class="language-plaintext highlighter-rouge">layout: post</code> 是正確的，這會告訴 Jekyll 使用 <code class="language-plaintext highlighter-rouge">post</code> 佈局來渲染您的文章。</p>
  </li>
  <li><strong>開始撰寫內容</strong>：
在 YAML Front Matter 之後，您就可以使用 Markdown 語法自由地撰寫您的文章內容了。</li>
</ol>

<hr />

<h2 id="markdown-基本語法快速說明">Markdown 基本語法快速說明</h2>

<p>Markdown 是一種輕量級標記語言，讓您可以輕鬆地撰寫格式化的文本。</p>

<h3 id="標題-headings">標題 (Headings)</h3>

<p>使用 <code class="language-plaintext highlighter-rouge">#</code> 符號來創建不同級別的標題。<code class="language-plaintext highlighter-rouge">#</code> 的數量代表標題的級別。</p>

<p>```markdown</p>
<h1 id="這是一級標題">這是一級標題</h1>
<h2 id="這是二級標題">這是二級標題</h2>
<h3 id="這是三級標題">這是三級標題</h3>
<h4 id="這是四級標題">這是四級標題</h4>]]></content><author><name>Li Kai_Huang</name><email>moray.huang@gmail.com</email></author><category term="筆記" /><category term="網頁" /><category term="測試" /><category term="Markdown" /><category term="blog" /><summary type="html"><![CDATA[這篇文章是我的第一篇部落格文章，旨在說明如何撰寫新文章以及 Markdown 的基本語法。]]></summary></entry><entry><title type="html">AI 看圖說故事</title><link href="http://localhost:4000/blog/AI-Class/project3/" rel="alternate" type="text/html" title="AI 看圖說故事" /><published>2025-06-07T15:40:00+08:00</published><updated>2025-06-07T15:40:00+08:00</updated><id>http://localhost:4000/blog/AI-Class/edge-ai-class-project3</id><content type="html" xml:base="http://localhost:4000/blog/AI-Class/project3/"><![CDATA[<h1 id="ai-看圖說故事">AI 看圖說故事</h1>

<p>本報告旨在介紹一個創新的AI 看圖說故事系統。該系統旨在將視覺內容轉化為富有想像力的故事情節，為使用者提供獨特的互動體驗。透過按下按鈕捕捉影像，系統會將圖像傳送至強大的 Google Gemini Vision AI 進行分析，並由 AI 根據圖像內容即時編寫一個童話故事</p>

<ul>
  <li><a href="#ai-看圖說故事">AI 看圖說故事</a>
    <ul>
      <li><a href="#功能">功能</a></li>
      <li><a href="#genai程式碼設計流程">GenAI程式碼設計流程</a></li>
      <li><a href="#程式碼產生提示">程式碼產生提示</a></li>
      <li><a href="#程式碼">程式碼</a></li>
      <li><a href="#實作成果">實作成果</a>
        <ul>
          <li><a href="#照片">照片</a></li>
          <li><a href="#影片">影片</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="功能">功能</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 按下按鈕即可拍攝影像
2. 將圖像發送至 Google-Gemini 並回覆訊息
3. 發送訊息到 Google-TTS 並播放 mp3 檔案進行說話 
</code></pre></div></div>

<h2 id="genai程式碼設計流程">GenAI程式碼設計流程</h2>

<pre><code class="language-mermaid">graph TD
    A[開始] --&gt; B(用戶按下按鈕);
    B --&gt; C[捕捉影像];
    C --&gt; D[影像數據];
    D --&gt; E[發送影像至 Google Gemini Vision];
    E --&gt; F{Gemini AI 圖像理解與故事生成};
    F -- 返回故事文字 --&gt; G[接收 Gemini 故事文本];
    G --&gt; H[發送故事文本至 Google TTS];
    H --&gt; I{TTS 生成 MP3 語音};
    I -- 返回 MP3 --&gt; J[接收 TTS MP3 語音檔];
    J --&gt; K[播放 MP3 語音];
    K --&gt; L[結束];
</code></pre>

<p><strong>流程圖說明：</strong></p>

<ul>
  <li><strong>開始 (Start)：</strong> 系統準備就緒。</li>
  <li><strong>用戶按下按鈕 (User Presses Button)：</strong> 用戶觸發影像捕捉。</li>
  <li><strong>捕捉影像 (Capture Image)：</strong> 相機模組捕捉當前畫面。</li>
  <li><strong>影像數據 (Image Data)：</strong> 獲取的圖像數據。</li>
  <li><strong>發送影像至 Google Gemini Vision (Send Image to Google Gemini Vision)：</strong> MCU 將圖像上傳到 Google Gemini Vision API。</li>
  <li><strong>Gemini AI 圖像理解與故事生成 (Gemini AI Image Understanding &amp; Story Generation)：</strong> Google Gemini 在雲端分析圖像並編寫童話故事。</li>
  <li><strong>接收 Gemini 故事文本 (Receive Gemini Story Text)：</strong> MCU 接收 Gemini 返回的故事文字。</li>
  <li><strong>發送故事文本至 Google TTS (Send Story Text to Google TTS)：</strong> MCU 將故事文字發送到 Google TTS API。</li>
  <li><strong>TTS 生成 MP3 語音 (TTS Generates MP3 Audio)：</strong> Google TTS 將文字轉換為 MP3 語音。</li>
  <li><strong>接收 TTS MP3 語音檔 (Receive TTS MP3 Audio File)：</strong> MCU 接收生成的 MP3 語音檔。</li>
  <li><strong>播放 MP3 語音 (Play MP3 Audio)：</strong> MCU 透過揚聲器播放語音。</li>
  <li><strong>結束 (End)：</strong> 一次「看圖說故事」流程完成。</li>
</ul>

<hr />

<h2 id="程式碼產生提示">程式碼產生提示</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>我給你一份範例代碼請幫我結合 並符合以下要求

1. 按下按鈕即可拍攝影像
2. 將圖像傳送到 Gemini-Vision 並讓 AI 講述童話故事 
3. 將 Text1 發送到 Google-TTS 並播放 mp3 檔案進行朗讀 
   
GenAIVision_TTS_TFT.ino
</code></pre></div></div>

<h2 id="程式碼">程式碼</h2>

<p>&lt;<strong>提示字:</strong> <em>看這張圖 請用中文給我一個簡短的故事</em>&gt;</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">String</span> <span class="n">openAI_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>               <span class="c1">// paste your generated openAI API key here</span>
<span class="n">String</span> <span class="n">Gemini_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>               <span class="c1">// paste your generated Gemini API key here</span>
<span class="n">String</span> <span class="n">Llama_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>                <span class="c1">// paste your generated Llama API key here</span>
<span class="kt">char</span> <span class="n">wifi_ssid</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>    <span class="c1">// your network SSID (name)</span>
<span class="kt">char</span> <span class="n">wifi_pass</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>        <span class="c1">// your network password</span>

<span class="cp">#include</span> <span class="cpf">&lt;WiFi.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;WiFiUdp.h&gt;</span><span class="cp">
#include</span> <span class="cpf">"GenAI.h"</span><span class="cp">
#include</span> <span class="cpf">"VideoStream.h"</span><span class="cp">
#include</span> <span class="cpf">"SPI.h"</span><span class="cp">
#include</span> <span class="cpf">"AmebaILI9341.h"</span><span class="cp">
#include</span> <span class="cpf">"TJpg_Decoder.h"</span><span class="c1"> // Include the jpeg decoder library</span><span class="cp">
#include</span> <span class="cpf">"AmebaFatFS.h"</span><span class="cp">
</span>
<span class="n">WiFiSSLClient</span> <span class="n">client</span><span class="p">;</span>
<span class="n">GenAI</span> <span class="n">llm</span><span class="p">;</span>
<span class="n">GenAI</span> <span class="n">tts</span><span class="p">;</span>

<span class="n">AmebaFatFS</span> <span class="n">fs</span><span class="p">;</span>
<span class="n">String</span> <span class="n">mp3Filename</span> <span class="o">=</span> <span class="s">"test_play_google_tts.mp3"</span><span class="p">;</span>

<span class="n">VideoSetting</span> <span class="nf">config</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="mi">768</span><span class="p">,</span> <span class="n">CAM_FPS</span><span class="p">,</span> <span class="n">VIDEO_JPEG</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
<span class="cp">#define CHANNEL 0
</span>
<span class="kt">uint32_t</span> <span class="n">img_addr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">uint32_t</span> <span class="n">img_len</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">buttonPin</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>          <span class="c1">// the number of the pushbutton pin</span>

<span class="c1">//String prompt_msg = "What type and name of the recyclables in the picture?";</span>
<span class="n">String</span> <span class="n">prompt_msg</span> <span class="o">=</span> <span class="s">"看這張圖 請用中文給我一個簡短的故事"</span><span class="p">;</span>

<span class="cp">#define TFT_RESET 5
#define TFT_DC    4
#define TFT_CS    SPI_SS
</span>
<span class="n">AmebaILI9341</span> <span class="n">tft</span> <span class="o">=</span> <span class="n">AmebaILI9341</span><span class="p">(</span><span class="n">TFT_CS</span><span class="p">,</span> <span class="n">TFT_DC</span><span class="p">,</span> <span class="n">TFT_RESET</span><span class="p">);</span>

<span class="cp">#define ILI9341_SPI_FREQUENCY 20000000
</span>
<span class="n">bool</span> <span class="nf">tft_output</span><span class="p">(</span><span class="kt">int16_t</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int16_t</span> <span class="n">y</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">w</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">h</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="o">*</span><span class="n">bitmap</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">drawBitmap</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">bitmap</span><span class="p">);</span>

    <span class="c1">// Return 1 to decode next block</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">initWiFi</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">WiFi</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="n">wifi_ssid</span><span class="p">,</span> <span class="n">wifi_pass</span><span class="p">);</span>

        <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Connecting to "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">wifi_ssid</span><span class="p">);</span>

        <span class="kt">uint32_t</span> <span class="n">StartTime</span> <span class="o">=</span> <span class="n">millis</span><span class="p">();</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">((</span><span class="n">StartTime</span> <span class="o">+</span> <span class="mi">5000</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">millis</span><span class="p">())</span> <span class="p">{</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">==</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"STAIP address: "</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">localIP</span><span class="p">());</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">init_tft</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>

    <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>

    <span class="n">tft</span><span class="p">.</span><span class="n">setForeground</span><span class="p">(</span><span class="n">ILI9341_GREEN</span><span class="p">);</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setFontSize</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">115200</span><span class="p">);</span>

    <span class="n">SPI</span><span class="p">.</span><span class="n">setDefaultFrequency</span><span class="p">(</span><span class="n">ILI9341_SPI_FREQUENCY</span><span class="p">);</span>
    <span class="n">initWiFi</span><span class="p">();</span>

    <span class="n">config</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">configVideoChannel</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">,</span> <span class="n">config</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">videoInit</span><span class="p">();</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">channelBegin</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">printInfo</span><span class="p">();</span>
    
    <span class="n">pinMode</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">,</span> <span class="n">INPUT</span><span class="p">);</span>
    <span class="n">pinMode</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>

    <span class="n">init_tft</span><span class="p">();</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"GenAIVision_TTS_LCD"</span><span class="p">);</span>

    <span class="n">TJpgDec</span><span class="p">.</span><span class="n">setJpgScale</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// The jpeg image can be scaled by a factor of 1, 2, 4, or 8    </span>
    <span class="n">TJpgDec</span><span class="p">.</span><span class="n">setCallback</span><span class="p">(</span><span class="n">tft_output</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"press button to capture image"</span><span class="p">);</span>
     <span class="k">if</span> <span class="p">((</span><span class="n">digitalRead</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">))</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Capture Image"</span><span class="p">);</span>       
        <span class="c1">// Start MP4 recording after 3 seconds of blinking</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">count</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="n">count</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
            <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="c1">// Camera take image</span>
        <span class="n">Camera</span><span class="p">.</span><span class="n">getImage</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_addr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_len</span><span class="p">);</span> 

    <span class="c1">// JPEG decode image &amp; display</span>
        <span class="n">TJpgDec</span><span class="p">.</span><span class="n">getJpgSize</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">);</span>
        <span class="n">TJpgDec</span><span class="p">.</span><span class="n">drawJpg</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">);</span>

    <span class="c1">// LLM Vision</span>
        <span class="n">String</span> <span class="n">text</span> <span class="o">=</span> <span class="n">llm</span><span class="p">.</span><span class="n">geminivision</span><span class="p">(</span><span class="n">Gemini_key</span><span class="p">,</span> <span class="s">"gemini-2.0-flash"</span><span class="p">,</span> <span class="n">prompt_msg</span><span class="p">,</span> <span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">,</span> <span class="n">client</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">text</span><span class="p">);</span>

    <span class="c1">// Text-To-Speech &amp; play mp3 file</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>    
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Text-To-Speech"</span><span class="p">);</span>
        <span class="c1">//tts.googletts(mp3Filename, text, "en-US");</span>
        <span class="n">tts</span><span class="p">.</span><span class="n">googletts</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="s">"zh-TW"</span><span class="p">);</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
        <span class="n">sdPlayMP3</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">);</span>       
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">sdPlayMP3</span><span class="p">(</span><span class="n">String</span> <span class="n">filename</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">fs</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="n">String</span> <span class="n">filepath</span> <span class="o">=</span> <span class="n">String</span><span class="p">(</span><span class="n">fs</span><span class="p">.</span><span class="n">getRootPath</span><span class="p">())</span> <span class="o">+</span> <span class="n">filename</span><span class="p">;</span>
    <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="n">fs</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="n">MP3</span><span class="p">);</span>
    <span class="n">file</span><span class="p">.</span><span class="n">setMp3DigitalVol</span><span class="p">(</span><span class="mi">175</span><span class="p">);</span>
    <span class="n">file</span><span class="p">.</span><span class="n">playMp3</span><span class="p">();</span>
    <span class="n">file</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
    <span class="n">fs</span><span class="p">.</span><span class="n">end</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="實作成果">實作成果</h2>

<h3 id="照片">照片</h3>

<p><strong><em>AI產出的故事</em></strong>
<img src="/assets/photo/Edge-Ai-Class-Project/AI說故事/178620.jpg" alt="imag" /></p>

<h3 id="影片">影片</h3>

<ol>
  <li>Damo影片</li>
</ol>

<p><a href="https://www.youtube.com/watch?v=HFSRFjz1Yuc"><img src="https://img.youtube.com/vi/HFSRFjz1Yuc/0.jpg" alt="IMAGE ALT TEXT HERE" /></a><br />
點擊圖片播放</p>]]></content><author><name>Li Kai_Huang</name><email>moray.huang@gmail.com</email></author><category term="1131邊緣運算課" /><category term="入門" /><category term="學習" /><category term="blog" /><summary type="html"><![CDATA[這篇文章會講解我邊緣運算的第三個專案 AI 看圖說故事]]></summary></entry><entry><title type="html">AI 輔助英語教學</title><link href="http://localhost:4000/blog/AI-Class/project4/" rel="alternate" type="text/html" title="AI 輔助英語教學" /><published>2025-06-07T15:40:00+08:00</published><updated>2025-06-07T15:40:00+08:00</updated><id>http://localhost:4000/blog/AI-Class/edge-ai-class-project4</id><content type="html" xml:base="http://localhost:4000/blog/AI-Class/project4/"><![CDATA[<h1 id="ai-輔助英語教學">AI 輔助英語教學</h1>

<p>本報告旨在介紹一款創新的AI 輔助英語教學系統，旨在為英語學習者提供即時、互動且個性化的學習體驗。該系統的核心功能是結合視覺辨識、語音合成與自然語言處理能力，模擬一位智能家教。當使用者按下按鈕拍攝單字卡影像後，系統會立即將圖像傳送至 Google Gemini Vision 進行單字辨識，隨後透過系統會將辨識出的單字發送至 Google Gemini LLM，由 AI 即時生成一個例句。</p>

<ul>
  <li><a href="#ai-輔助英語教學">AI 輔助英語教學</a>
    <ul>
      <li><a href="#功能">功能</a></li>
      <li><a href="#genai程式碼設計流程">GenAI程式碼設計流程</a></li>
      <li><a href="#程式碼產生提示">程式碼產生提示</a></li>
      <li><a href="#程式碼">程式碼</a>
        <ul>
          <li><a href="#程式重點-提示字-just-say-the-word-in-the-picture--please-make-a-short-sentence-with-word">程式重點 &lt;<strong>提示字:</strong> <em>“Just say the word in the picture?”  \&amp;</em>“please make a short sentence with”+ word*</a></li>
        </ul>
      </li>
      <li><a href="#實作成果">實作成果</a>
        <ul>
          <li><a href="#影片">影片</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="功能">功能</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 按下按鈕即可拍攝影像
2. 將圖像發送至 Google-Gemini 並回覆訊息
3. 發送訊息到 Google-TTS 並播放 mp3 檔案進行說話 
</code></pre></div></div>

<h2 id="genai程式碼設計流程">GenAI程式碼設計流程</h2>

<pre><code class="language-mermaid">graph TD
    A[開始] --&gt; B(用戶按下按鈕);
    B --&gt; C[捕捉單字卡影像];
    C --&gt; D[影像數據];
    D --&gt; E[發送影像至 Google Gemini Vision];
    E --&gt; F{Gemini Vision 辨識單字};
    F -- 返回單字 Text1 --&gt; G[接收單字 Text1];
    G --&gt; H[發送 Text1 至 Google TTS];
    H --&gt; I{TTS 生成 Text1 MP3 語音};
    I -- 返回 MP3 --&gt; J[接收 Text1 MP3 語音檔];
    J --&gt; K[播放 Text1 MP3 語音];
    
    K --&gt; L[發送 Text1 至 Google Gemini LLM];
    L --&gt; M{Gemini LLM 生成例句 Text2};
    M -- 返回例句 Text2 --&gt; N[接收例句 Text2];
    N --&gt; O[發送 Text2 至 Google TTS];
    O --&gt; P{TTS 生成 Text2 MP3 語音};
    P -- 返回 MP3 --&gt; Q[接收 Text2 MP3 語音檔];
    Q --&gt; R[播放 Text2 MP3 語音];
    R --&gt; S[結束];  
</code></pre>

<p><strong>流程圖說明：</strong></p>

<ul>
  <li><strong>開始 (Start)：</strong> 系統準備就緒。</li>
  <li><strong>用戶按下按鈕 (User Presses Button)：</strong> 用戶觸發影像捕捉。</li>
  <li><strong>捕捉單字卡影像 (Capture Word Card Image)：</strong> 相機模組捕捉單字卡的圖像。</li>
  <li><strong>影像數據 (Image Data)：</strong> 獲取的圖像數據。</li>
  <li><strong>發送影像至 Google Gemini Vision (Send Image to Google Gemini Vision)：</strong> MCU 將圖像上傳到 Google Gemini Vision API。</li>
  <li><strong>Gemini Vision 辨識單字 (Gemini Vision Recognizes Word)：</strong> Google Gemini 在雲端分析圖像並辨識出單字。</li>
  <li><strong>接收單字 Text1 (Receive Word Text1)：</strong> MCU 接收 Gemini 返回的單字文字 (Text1)。</li>
  <li><strong>發送 Text1 至 Google TTS (Send Text1 to Google TTS)：</strong> MCU 將單字 (Text1) 發送到 Google TTS API。</li>
  <li><strong>TTS 生成 Text1 MP3 語音 (TTS Generates Text1 MP3 Audio)：</strong> Google TTS 將單字文字轉換為 MP3 語音。</li>
  <li><strong>接收 Text1 MP3 語音檔 (Receive Text1 MP3 Audio File)：</strong> MCU 接收生成的 MP3 語音檔。</li>
  <li><strong>播放 Text1 MP3 語音 (Play Text1 MP3 Audio)：</strong> MCU 透過揚聲器播放單字語音。</li>
  <li><strong>發送 Text1 至 Google Gemini LLM (Send Text1 to Google Gemini LLM)：</strong> MCU 將單字 (Text1) 發送到 Google Gemini LLM API 以生成例句。</li>
  <li><strong>Gemini LLM 生成例句 Text2 (Gemini LLM Generates Example Sentence Text2)：</strong> Google Gemini LLM 根據單字生成一個例句。</li>
  <li><strong>接收例句 Text2 (Receive Example Sentence Text2)：</strong> MCU 接收 Gemini LLM 返回的例句文字 (Text2)。</li>
  <li><strong>發送 Text2 至 Google TTS (Send Text2 to Google TTS)：</strong> MCU 將例句 (Text2) 發送到 Google TTS API。</li>
  <li><strong>TTS 生成 Text2 MP3 語音 (TTS Generates Text2 MP3 Audio)：</strong> Google TTS 將例句文字轉換為 MP3 語音。</li>
  <li><strong>接收 Text2 MP3 語音檔 (Receive Text2 MP3 Audio File)：</strong> MCU 接收生成的 MP3 語音檔。</li>
  <li><strong>播放 Text2 MP3 語音 (Play Text2 MP3 Audio)：</strong> MCU 透過揚聲器播放例句語音。</li>
  <li><strong>結束 (End)：</strong> 一次英語教學輔助流程完成。</li>
</ul>

<h2 id="程式碼產生提示">程式碼產生提示</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>我給你三份範例代碼請幫我結合 並符合以下要求

  1. 按下按鈕即可拍攝影像
  2. 將圖像傳送到 Gemini-Vision 來讀取單字卡
  3. 將 Text1 發送到 Google-TTS 並播放 mp3 檔案進行朗讀 
  4. 將 Text1 送到 Gemini-LLM 來造句
  5. 將 Text2 發送到 Google-TTS 並播放 mp3 檔案進行說話  範例:   [GenAIVision.ino](https://github.com/rkuo2000/EdgeAI-AMB82mini/blob/main/ArduinoAMB82-mini/GenAIVision/GenAIVision.ino)   [文字轉語音.ino](https://github.com/rkuo2000/EdgeAI-AMB82mini/blob/main/Arduino/AMB82-mini/TextToSpeech/TextToSpeech.ino)   [ILI9341_TFTLCD_文本.ino](https://github.com/rkuo2000/EdgeAI-AMB82mini/blob/main/Arduino/AMB82-mini/ILI9341_TFTLCD_Text/ILI9341_TFTLCD_Text.ino)
</code></pre></div></div>

<h2 id="程式碼">程式碼</h2>

<h3 id="程式重點-提示字-just-say-the-word-in-the-picture--please-make-a-short-sentence-with-word">程式重點 &lt;<strong>提示字:</strong> <em>“Just say the word in the picture?”  &amp;</em>“please make a short sentence with”+ word*</h3>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">String</span> <span class="n">openAI_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>                                         <span class="c1">// paste your generated openAI API key here</span>
<span class="n">String</span> <span class="n">Gemini_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>  <span class="c1">// paste your generated Gemini API key here</span>
<span class="n">String</span> <span class="n">Llama_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>                                          <span class="c1">// paste your generated Llama API key here</span>
<span class="kt">char</span> <span class="n">wifi_ssid</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span><span class="c1">// your network SSID (name)</span>
<span class="kt">char</span> <span class="n">wifi_pass</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span><span class="c1">// your network password</span>

<span class="cp">#include</span> <span class="cpf">&lt;WiFi.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;WiFiUdp.h&gt;</span><span class="cp">
#include</span> <span class="cpf">"GenAI.h"</span><span class="cp">
#include</span> <span class="cpf">"VideoStream.h"</span><span class="cp">
#include</span> <span class="cpf">"SPI.h"</span><span class="cp">
#include</span> <span class="cpf">"AmebaILI9341.h"</span><span class="cp">
#include</span> <span class="cpf">"TJpg_Decoder.h"</span><span class="c1">  // Include the jpeg decoder library</span><span class="cp">
#include</span> <span class="cpf">"AmebaFatFS.h"</span><span class="cp">
</span>
<span class="n">WiFiSSLClient</span> <span class="n">client</span><span class="p">;</span>
<span class="n">GenAI</span> <span class="n">llm</span><span class="p">;</span>
<span class="n">GenAI</span> <span class="n">tts</span><span class="p">;</span>

<span class="n">AmebaFatFS</span> <span class="n">fs</span><span class="p">;</span>
<span class="n">String</span> <span class="n">mp3Filename</span> <span class="o">=</span> <span class="s">"test_play_google_tts.mp3"</span><span class="p">;</span>

<span class="n">VideoSetting</span> <span class="nf">config</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="mi">768</span><span class="p">,</span> <span class="n">CAM_FPS</span><span class="p">,</span> <span class="n">VIDEO_JPEG</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
<span class="cp">#define CHANNEL 0
</span>
<span class="kt">uint32_t</span> <span class="n">img_addr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">uint32_t</span> <span class="n">img_len</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">buttonPin</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>  <span class="c1">// the number of the pushbutton pin</span>

<span class="cp">#define TFT_RESET 5
#define TFT_DC 4
#define TFT_CS SPI_SS
</span>
<span class="n">AmebaILI9341</span> <span class="n">tft</span> <span class="o">=</span> <span class="n">AmebaILI9341</span><span class="p">(</span><span class="n">TFT_CS</span><span class="p">,</span> <span class="n">TFT_DC</span><span class="p">,</span> <span class="n">TFT_RESET</span><span class="p">);</span>

<span class="cp">#define ILI9341_SPI_FREQUENCY 20000000
</span>
<span class="n">bool</span> <span class="nf">tft_output</span><span class="p">(</span><span class="kt">int16_t</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int16_t</span> <span class="n">y</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">w</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">h</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="o">*</span><span class="n">bitmap</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">tft</span><span class="p">.</span><span class="n">drawBitmap</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">bitmap</span><span class="p">);</span>

  <span class="c1">// Return 1 to decode next block</span>
  <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">initWiFi</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">WiFi</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="n">wifi_ssid</span><span class="p">,</span> <span class="n">wifi_pass</span><span class="p">);</span>

    <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Connecting to "</span><span class="p">);</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">wifi_ssid</span><span class="p">);</span>

    <span class="kt">uint32_t</span> <span class="n">StartTime</span> <span class="o">=</span> <span class="n">millis</span><span class="p">();</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
      <span class="k">if</span> <span class="p">((</span><span class="n">StartTime</span> <span class="o">+</span> <span class="mi">5000</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">millis</span><span class="p">())</span> <span class="p">{</span>
        <span class="k">break</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">==</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"STAIP address: "</span><span class="p">);</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">localIP</span><span class="p">());</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
      <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">init_tft</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">tft</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
  <span class="n">tft</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>

  <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span>
  <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>

  <span class="n">tft</span><span class="p">.</span><span class="n">setForeground</span><span class="p">(</span><span class="n">ILI9341_GREEN</span><span class="p">);</span>
  <span class="n">tft</span><span class="p">.</span><span class="n">setFontSize</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">115200</span><span class="p">);</span>

  <span class="n">SPI</span><span class="p">.</span><span class="n">setDefaultFrequency</span><span class="p">(</span><span class="n">ILI9341_SPI_FREQUENCY</span><span class="p">);</span>
  <span class="n">initWiFi</span><span class="p">();</span>

  <span class="n">config</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
  <span class="n">Camera</span><span class="p">.</span><span class="n">configVideoChannel</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">,</span> <span class="n">config</span><span class="p">);</span>
  <span class="n">Camera</span><span class="p">.</span><span class="n">videoInit</span><span class="p">();</span>
  <span class="n">Camera</span><span class="p">.</span><span class="n">channelBegin</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">);</span>
  <span class="n">Camera</span><span class="p">.</span><span class="n">printInfo</span><span class="p">();</span>

  <span class="n">pinMode</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">,</span> <span class="n">INPUT</span><span class="p">);</span>
  <span class="n">pinMode</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>

  <span class="n">init_tft</span><span class="p">();</span>
  <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"GenAIVision_TTS_ReadWordCard"</span><span class="p">);</span>

  <span class="n">TJpgDec</span><span class="p">.</span><span class="n">setJpgScale</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>  <span class="c1">// The jpeg image can be scaled by a factor of 1, 2, 4, or 8</span>
  <span class="n">TJpgDec</span><span class="p">.</span><span class="n">setCallback</span><span class="p">(</span><span class="n">tft_output</span><span class="p">);</span>

  <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Press Button"</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">blink_blue</span><span class="p">(</span><span class="kt">int</span> <span class="n">count</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">count</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
    <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">((</span><span class="n">digitalRead</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">))</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Image captured!"</span><span class="p">);</span>
    <span class="n">blink_blue</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>  <span class="c1">// blink</span>
                    <span class="c1">// Camera take image</span>

    <span class="n">Camera</span><span class="p">.</span><span class="n">getImage</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_addr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_len</span><span class="p">);</span>

    <span class="c1">// JPEG decode image &amp; display</span>
    <span class="n">TJpgDec</span><span class="p">.</span><span class="n">getJpgSize</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">);</span>
    <span class="n">TJpgDec</span><span class="p">.</span><span class="n">drawJpg</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">);</span>

    <span class="c1">// LLM Vision</span>
    <span class="n">String</span> <span class="n">prompt_msg_img</span> <span class="o">=</span> <span class="s">"Just say the word in the picture?"</span><span class="p">;</span>
    <span class="n">String</span> <span class="n">text</span> <span class="o">=</span> <span class="n">llm</span><span class="p">.</span><span class="n">geminivision</span><span class="p">(</span><span class="n">Gemini_key</span><span class="p">,</span> <span class="s">"gemini-2.0-flash"</span><span class="p">,</span> <span class="n">prompt_msg_img</span><span class="p">,</span> <span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">,</span> <span class="n">client</span><span class="p">);</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">text</span><span class="p">);</span>

    <span class="c1">// Text-To-Speech &amp; play mp3 file</span>
    <span class="n">tts</span><span class="p">.</span><span class="n">googletts</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="s">"en-US"</span><span class="p">);</span>
    <span class="c1">//tts.googletts(mp3Filename, text, "zh-TW");</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
    <span class="n">sdPlayMP3</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">);</span>

    <span class="c1">// LLM Text</span>
    <span class="n">String</span> <span class="n">prompt_msg</span> <span class="o">=</span> <span class="s">"please make a short sentence with "</span><span class="o">+</span><span class="n">text</span><span class="p">;</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">prompt_msg</span><span class="p">);</span>
    <span class="n">String</span> <span class="n">txt</span> <span class="o">=</span> <span class="n">llm</span><span class="p">.</span><span class="n">geminitext</span><span class="p">(</span><span class="n">Gemini_key</span><span class="p">,</span> <span class="s">"gemini-2.0-flash"</span><span class="p">,</span> <span class="n">prompt_msg</span><span class="p">,</span> <span class="n">client</span><span class="p">);</span>    
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">txt</span><span class="p">);</span>

    <span class="c1">// Text-To-Speech &amp; play mp3 file</span>
    <span class="n">tts</span><span class="p">.</span><span class="n">googletts</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">,</span> <span class="n">txt</span><span class="p">,</span> <span class="s">"en-US"</span><span class="p">);</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
    <span class="n">sdPlayMP3</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">);</span>

    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Press Button"</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">sdPlayMP3</span><span class="p">(</span><span class="n">String</span> <span class="n">filename</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">fs</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
  <span class="n">String</span> <span class="n">filepath</span> <span class="o">=</span> <span class="n">String</span><span class="p">(</span><span class="n">fs</span><span class="p">.</span><span class="n">getRootPath</span><span class="p">())</span> <span class="o">+</span> <span class="n">filename</span><span class="p">;</span>
  <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="n">fs</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="n">MP3</span><span class="p">);</span>
  <span class="n">file</span><span class="p">.</span><span class="n">setMp3DigitalVol</span><span class="p">(</span><span class="mi">128</span><span class="p">);</span>
  <span class="n">file</span><span class="p">.</span><span class="n">playMp3</span><span class="p">();</span>
  <span class="n">file</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
  <span class="n">fs</span><span class="p">.</span><span class="n">end</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="實作成果">實作成果</h2>

<h3 id="影片">影片</h3>

<p>Damo影片</p>

<p><a href="https://www.youtube.com/watch?v=3WUXcYA3hXg"><img src="https://img.youtube.com/vi/3WUXcYA3hXg/0.jpg" alt="IMAGE ALT TEXT HERE" /></a><br />
點擊圖片播放</p>]]></content><author><name>Li Kai_Huang</name><email>moray.huang@gmail.com</email></author><category term="1131邊緣運算課" /><category term="入門" /><category term="學習" /><category term="blog" /><summary type="html"><![CDATA[這篇文章會講解我邊緣運算的第四個專案 AI 輔助英語教學]]></summary></entry><entry><title type="html">AI 輔助分類回收系統</title><link href="http://localhost:4000/blog/AI-Class/project1/" rel="alternate" type="text/html" title="AI 輔助分類回收系統" /><published>2025-06-07T15:40:00+08:00</published><updated>2025-06-07T15:40:00+08:00</updated><id>http://localhost:4000/blog/AI-Class/edge-ai-class-project1</id><content type="html" xml:base="http://localhost:4000/blog/AI-Class/project1/"><![CDATA[<h1 id="ai-輔助分類回收系統">AI 輔助分類回收系統</h1>

<p>本報告旨在介紹一個基於邊緣 AI 技術的輔助回收系統。該系統利用 Realtek AMB82_mini 微控制器作為核心處理單元，整合影像辨識與語音互動功能，旨在實現對回收物品的自動識別與語音指引，從而提升回收效率與正確性。</p>

<ul>
  <li><a href="#ai-輔助分類回收系統">AI 輔助分類回收系統</a>
    <ul>
      <li><a href="#功能">功能</a></li>
      <li><a href="#genai程式碼設計流程">GenAI程式碼設計流程</a></li>
      <li><a href="#程式碼產生提示">程式碼產生提示</a></li>
      <li><a href="#程式碼">程式碼</a>
        <ul>
          <li><a href="#程式重點-提示字-請問這個回收物是什麼請用中文回答">程式重點 &lt;<strong>提示字:</strong> <em>請問這個回收物是什麼?請用中文回答</em>&gt;</a></li>
        </ul>
      </li>
      <li><a href="#實作成果">實作成果</a>
        <ul>
          <li><a href="#照片">照片</a></li>
          <li><a href="#影片">影片</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="功能">功能</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 按下按鈕即可拍攝影像
2. 將圖像發送至 Google-Gemini 並回覆訊息
3. 發送訊息到 Google-TTS 並播放 mp3 檔案進行說話 
</code></pre></div></div>

<h2 id="genai程式碼設計流程">GenAI程式碼設計流程</h2>

<pre><code class="language-mermaid">graph TD
    A[開始] --&gt; B(用戶按下按鈕);
    B --&gt; C{拍攝圖像};
    C --&gt; D[圖像數據];
    D --&gt; E[發送圖像至 Google Gemini];
    E --&gt; F{Gemini 圖像辨識};
    F -- 返回回應 --&gt; G[接收 Gemini 回應 - 文字];
    G --&gt; H[發送回應文字至 Google TTS];
    H --&gt; I{TTS 生成 MP3 語音};
    I -- 返回 MP3 --&gt; J[接收 TTS MP3 語音檔];
    J --&gt; K[播放 MP3 語音];
    J --&gt; L[顯示結果於 LCD - 選用];
    K --&gt; M[結束];
    L --&gt; M;
</code></pre>

<h2 id="程式碼產生提示">程式碼產生提示</h2>

<h2 id="程式碼">程式碼</h2>

<h3 id="程式重點-提示字-請問這個回收物是什麼請用中文回答">程式重點 &lt;<strong>提示字:</strong> <em>請問這個回收物是什麼?請用中文回答</em>&gt;</h3>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">String</span> <span class="n">Gemini_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>               <span class="c1">// paste your generated Gemini API key here</span>
<span class="kt">char</span> <span class="n">wifi_ssid</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>    <span class="c1">// your network SSID (name)</span>
<span class="kt">char</span> <span class="n">wifi_pass</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>        <span class="c1">// your network password</span>

<span class="cp">#include</span> <span class="cpf">&lt;WiFi.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;WiFiUdp.h&gt;</span><span class="cp">
#include</span> <span class="cpf">"GenAI.h"</span><span class="cp">
#include</span> <span class="cpf">"VideoStream.h"</span><span class="cp">
#include</span> <span class="cpf">"SPI.h"</span><span class="cp">
#include</span> <span class="cpf">"AmebaILI9341.h"</span><span class="cp">
#include</span> <span class="cpf">"TJpg_Decoder.h"</span><span class="c1"> // Include the jpeg decoder library</span><span class="cp">
#include</span> <span class="cpf">"AmebaFatFS.h"</span><span class="cp">
</span>
<span class="n">WiFiSSLClient</span> <span class="n">client</span><span class="p">;</span>
<span class="n">GenAI</span> <span class="n">llm</span><span class="p">;</span>
<span class="n">GenAI</span> <span class="n">tts</span><span class="p">;</span>

<span class="n">AmebaFatFS</span> <span class="n">fs</span><span class="p">;</span>
<span class="n">String</span> <span class="n">mp3Filename</span> <span class="o">=</span> <span class="s">"test_play_google_tts.mp3"</span><span class="p">;</span>

<span class="n">VideoSetting</span> <span class="nf">config</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="mi">768</span><span class="p">,</span> <span class="n">CAM_FPS</span><span class="p">,</span> <span class="n">VIDEO_JPEG</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
<span class="cp">#define CHANNEL 0
</span>
<span class="kt">uint32_t</span> <span class="n">img_addr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">uint32_t</span> <span class="n">img_len</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">buttonPin</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>          <span class="c1">// the number of the pushbutton pin</span>

<span class="c1">//String prompt_msg = "What type and name of the recyclables in the picture?";</span>
<span class="n">String</span> <span class="n">prompt_msg</span> <span class="o">=</span> <span class="s">"請問這個回收物是什麼?請用中文回答"</span><span class="p">;</span>

<span class="cp">#define TFT_RESET 5
#define TFT_DC    4
#define TFT_CS    SPI_SS
</span>
<span class="n">AmebaILI9341</span> <span class="n">tft</span> <span class="o">=</span> <span class="n">AmebaILI9341</span><span class="p">(</span><span class="n">TFT_CS</span><span class="p">,</span> <span class="n">TFT_DC</span><span class="p">,</span> <span class="n">TFT_RESET</span><span class="p">);</span>

<span class="cp">#define ILI9341_SPI_FREQUENCY 20000000
</span>
<span class="n">bool</span> <span class="nf">tft_output</span><span class="p">(</span><span class="kt">int16_t</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int16_t</span> <span class="n">y</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">w</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">h</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="o">*</span><span class="n">bitmap</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">drawBitmap</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">bitmap</span><span class="p">);</span>

    <span class="c1">// Return 1 to decode next block</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">initWiFi</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">WiFi</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="n">wifi_ssid</span><span class="p">,</span> <span class="n">wifi_pass</span><span class="p">);</span>

        <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Connecting to "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">wifi_ssid</span><span class="p">);</span>

        <span class="kt">uint32_t</span> <span class="n">StartTime</span> <span class="o">=</span> <span class="n">millis</span><span class="p">();</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">((</span><span class="n">StartTime</span> <span class="o">+</span> <span class="mi">5000</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">millis</span><span class="p">())</span> <span class="p">{</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">==</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"STAIP address: "</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">localIP</span><span class="p">());</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">init_tft</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>

    <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>

    <span class="n">tft</span><span class="p">.</span><span class="n">setForeground</span><span class="p">(</span><span class="n">ILI9341_GREEN</span><span class="p">);</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setFontSize</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">115200</span><span class="p">);</span>

    <span class="n">SPI</span><span class="p">.</span><span class="n">setDefaultFrequency</span><span class="p">(</span><span class="n">ILI9341_SPI_FREQUENCY</span><span class="p">);</span>
    <span class="n">initWiFi</span><span class="p">();</span>

    <span class="n">config</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">configVideoChannel</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">,</span> <span class="n">config</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">videoInit</span><span class="p">();</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">channelBegin</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">printInfo</span><span class="p">();</span>
    
    <span class="n">pinMode</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">,</span> <span class="n">INPUT</span><span class="p">);</span>
    <span class="n">pinMode</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span>

    <span class="n">init_tft</span><span class="p">();</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"GenAIVision_TTS_LCD"</span><span class="p">);</span>

    <span class="n">TJpgDec</span><span class="p">.</span><span class="n">setJpgScale</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// The jpeg image can be scaled by a factor of 1, 2, 4, or 8    </span>
    <span class="n">TJpgDec</span><span class="p">.</span><span class="n">setCallback</span><span class="p">(</span><span class="n">tft_output</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"press button to capture image"</span><span class="p">);</span>
     <span class="k">if</span> <span class="p">((</span><span class="n">digitalRead</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">))</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Capture Image"</span><span class="p">);</span>       
        <span class="c1">// Start MP4 recording after 3 seconds of blinking</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">count</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="n">count</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
            <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="c1">// Camera take image</span>
        <span class="n">Camera</span><span class="p">.</span><span class="n">getImage</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_addr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_len</span><span class="p">);</span> 

    <span class="c1">// JPEG decode image &amp; display</span>
        <span class="n">TJpgDec</span><span class="p">.</span><span class="n">getJpgSize</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">);</span>
        <span class="n">TJpgDec</span><span class="p">.</span><span class="n">drawJpg</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">);</span>

    <span class="c1">// LLM Vision</span>
        <span class="n">String</span> <span class="n">text</span> <span class="o">=</span> <span class="n">llm</span><span class="p">.</span><span class="n">geminivision</span><span class="p">(</span><span class="n">Gemini_key</span><span class="p">,</span> <span class="s">"gemini-2.0-flash"</span><span class="p">,</span> <span class="n">prompt_msg</span><span class="p">,</span> <span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">,</span> <span class="n">client</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">text</span><span class="p">);</span>

    <span class="c1">// Text-To-Speech &amp; play mp3 file</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>    
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Text-To-Speech"</span><span class="p">);</span>
        <span class="c1">//tts.googletts(mp3Filename, text, "en-US");</span>
        <span class="n">tts</span><span class="p">.</span><span class="n">googletts</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="s">"zh-TW"</span><span class="p">);</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
        <span class="n">sdPlayMP3</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">);</span>       
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">sdPlayMP3</span><span class="p">(</span><span class="n">String</span> <span class="n">filename</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">fs</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="n">String</span> <span class="n">filepath</span> <span class="o">=</span> <span class="n">String</span><span class="p">(</span><span class="n">fs</span><span class="p">.</span><span class="n">getRootPath</span><span class="p">())</span> <span class="o">+</span> <span class="n">filename</span><span class="p">;</span>
    <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="n">fs</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="n">MP3</span><span class="p">);</span>
    <span class="n">file</span><span class="p">.</span><span class="n">setMp3DigitalVol</span><span class="p">(</span><span class="mi">175</span><span class="p">);</span>
    <span class="n">file</span><span class="p">.</span><span class="n">playMp3</span><span class="p">();</span>
    <span class="n">file</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
    <span class="n">fs</span><span class="p">.</span><span class="n">end</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="實作成果">實作成果</h2>

<h3 id="照片">照片</h3>

<ol>
  <li>設備照
<img src="/assets/photo/Edge-Ai-Class-Project/AI回收/178615_0.jpg" alt="imag" /></li>
</ol>

<p><img src="/assets/photo/Edge-Ai-Class-Project/AI回收/178616_0.jpg" alt="imag" /></p>

<h3 id="影片">影片</h3>

<ol>
  <li>Damo影片</li>
</ol>

<p><a href="https://www.youtube.com/watch?v=lom80A3G_54"><img src="https://img.youtube.com/vi/lom80A3G_54/0.jpg" alt="IMAGE ALT TEXT HERE" /></a>
點擊圖片播放</p>]]></content><author><name>Li Kai_Huang</name><email>moray.huang@gmail.com</email></author><category term="1131邊緣運算課" /><category term="入門" /><category term="學習" /><category term="blog" /><summary type="html"><![CDATA[這篇文章會講解我邊緣運算的第一個專案 AI 輔助分類回收系統]]></summary></entry><entry><title type="html">AI 盲人導航系統</title><link href="http://localhost:4000/blog/AI-Class/project6/" rel="alternate" type="text/html" title="AI 盲人導航系統" /><published>2025-06-07T15:40:00+08:00</published><updated>2025-06-07T15:40:00+08:00</updated><id>http://localhost:4000/blog/AI-Class/edge-ai-class-project6</id><content type="html" xml:base="http://localhost:4000/blog/AI-Class/project6/"><![CDATA[<h1 id="ai-盲人導航系統">AI 盲人導航系統</h1>
<p>本報告旨在介紹一款專為視障人士設計的AI 盲人導航系統。該系統旨在提供即時的語音定位輔助，幫助視障者更獨立、安全地探索周遭環境。其核心功能是透過掃描特定地點的二維碼 (QR Code)，迅速獲取二維碼內嵌的文字資訊（即地點名稱）。隨後，系統會利用文字轉語音 (Text-to-Speech, TTS) 技術將這個地點名稱轉換為清晰的語音指令，並立即透過音訊輸出裝置播放出來。</p>

<ul>
  <li><a href="#ai-盲人導航系統">AI 盲人導航系統</a>
    <ul>
      <li><a href="#功能">功能</a></li>
      <li><a href="#genai程式碼設計流程">GenAI程式碼設計流程</a></li>
      <li><a href="#程式碼產生提示">程式碼產生提示</a></li>
      <li><a href="#程式碼">程式碼</a></li>
      <li><a href="#實作成果">實作成果</a>
        <ul>
          <li><a href="#照片">照片</a></li>
          <li><a href="#影片">影片</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="功能">功能</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>掃描二維碼說出位置

  1. 掃描二維碼取得文字（地點名稱）

  2. 文字轉語音，取得文字的 mp3

  3. SDCardPlayMP3 播放 mp3 並說出位置名稱
</code></pre></div></div>

<h2 id="genai程式碼設計流程">GenAI程式碼設計流程</h2>

<pre><code class="language-mermaid">graph TD
    A[開始] --&gt; B(系統啟動/待機);
    B --&gt; C[掃描二維碼];
    C --&gt; D{成功解碼二維碼?};
    D -- 是 --&gt; E[取得文字 地點名稱];
    D -- 否 --&gt; F[掃描失敗/錯誤處理];
    F --&gt; B;

    E --&gt; G[將文字傳送至 Google TTS];
    G --&gt; H{TTS 生成 mp3 語音檔};
    H -- 成功 --&gt; I[接收 mp3 語音檔];
    H -- 失敗 --&gt; J[TTS 錯誤處理/提示音];
    J --&gt; B;

    I --&gt; K[將 mp3 儲存到 SD 卡 - 暫存];
    K --&gt; L[從 SD 卡讀取 mp3 並播放];
    L --&gt; M[語音播報完成];
    M --&gt; B;
</code></pre>

<p><strong>流程圖說明：</strong></p>

<ul>
  <li><strong>開始 (Start)：</strong> 系統啟動流程。</li>
  <li><strong>系統啟動/待機 (System Startup/Standby)：</strong> 系統初始化並等待掃描觸發。</li>
  <li><strong>掃描二維碼 (Scan QR Code)：</strong> 攝影機捕捉二維碼影像。</li>
  <li><strong>成功解碼二維碼? (Successfully Decode QR Code?)：</strong> 判斷二維碼是否成功解析。</li>
  <li><strong>是 (Yes)：</strong> 如果成功解碼。</li>
  <li><strong>取得文字 地點名稱 (Get Text Location Name)：</strong> 從二維碼中提取出地點名稱文字。</li>
  <li><strong>否 (No)：</strong> 如果解碼失敗。</li>
  <li><strong>掃描失敗/錯誤處理 (Scan Failed/Error Handling)：</strong> 執行錯誤處理，可能會有提示音或回到待機。</li>
  <li><strong>將文字傳送至 Google TTS (Send Text to Google TTS)：</strong> 將地點名稱文字發送到 Google Text-to-Speech 服務。</li>
  <li><strong>TTS 生成 mp3 語音檔 (TTS Generates MP3 Audio File)：</strong> Google TTS 將文字轉換為 mp3 格式的語音。</li>
  <li><strong>成功 (Success)：</strong> 如果 TTS 成功生成語音。</li>
  <li><strong>接收 mp3 語音檔 (Receive MP3 Audio File)：</strong> 接收從 TTS 返回的 mp3 語音數據。</li>
  <li><strong>失敗 (Failure)：</strong> 如果 TTS 服務失敗或超時。</li>
  <li><strong>TTS 錯誤處理/提示音 (TTS Error Handling/Prompt Tone)：</strong> 執行錯誤處理，可能會有提示音。</li>
  <li><strong>將 mp3 儲存到 SD 卡 (暫存) (Save MP3 to SD Card (Temporary))：</strong> 將接收到的 mp3 語音檔暫時儲存到 SD 卡。</li>
  <li><strong>從 SD 卡讀取 mp3 並播放 (Read MP3 from SD Card and Play)：</strong> 從 SD 卡讀取該 mp3 檔案並透過音訊輸出裝置播放。</li>
  <li><strong>語音播報完成 (Voice Broadcast Complete)：</strong> 語音播放結束。</li>
  <li><strong>返回到系統啟動/待機 (Return to System Startup/Standby)：</strong> 系統回到初始狀態，等待下一次掃描。</li>
</ul>

<h2 id="程式碼產生提示">程式碼產生提示</h2>

<p><img src="photo/AI盲人導航系統/螢幕擷取畫面%202025-06-14%20014155.png" alt="img" /></p>
<pre><code class="language-我想請你幫我做一個滿足以下條件的程式">功能： 掃描二維碼說出位置
步驟1. 掃描二維碼取得文字（地點名稱）
步驟2. 文字轉語音，取得文字的 mp3
步驟3. SDCardPlayMP3 播放 mp3 並說出位置名稱
我將提供範例程式 如下:
</code></pre>

<h2 id="程式碼">程式碼</h2>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#undef DEFAULT
</span>
<span class="cp">#include</span> <span class="cpf">"VideoStream.h"</span><span class="cp">
#include</span> <span class="cpf">"QRCodeScanner.h"</span><span class="cp">
#include</span> <span class="cpf">"WiFi.h"</span><span class="cp">
#include</span> <span class="cpf">&lt;WiFiUdp.h&gt;</span><span class="cp">
#include</span> <span class="cpf">"GenAI.h"</span><span class="cp">
#include</span> <span class="cpf">"AmebaFatFS.h"</span><span class="cp">
</span>
<span class="c1">// --- NTP 時間同步相關庫 ---</span>
<span class="cp">#include</span> <span class="cpf">"NTPClient.h"</span><span class="cp">
</span>
<span class="c1">// --- WiFi Configuration ---</span>
<span class="kt">char</span> <span class="n">ssid</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>    <span class="c1">// **請務必更換為您的家庭 Wi-Fi SSID！**</span>
<span class="kt">char</span> <span class="n">pass</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>    <span class="c1">// **請務必更換為您的家庭 Wi-Fi 密碼！**</span>

<span class="c1">// --- Camera &amp; QR Code Scanner Configuration ---</span>
<span class="cp">#define CHANNEL 0
</span><span class="n">VideoSetting</span> <span class="nf">config</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">);</span>
<span class="n">QRCodeScanner</span> <span class="n">Scanner</span><span class="p">;</span>

<span class="c1">// --- Text-to-Speech &amp; SD Card Playback Configuration ---</span>
<span class="n">AmebaFatFS</span> <span class="n">fs</span><span class="p">;</span>
<span class="n">GenAI</span> <span class="n">tts</span><span class="p">;</span>
<span class="n">String</span> <span class="n">mp3Filename</span> <span class="o">=</span> <span class="s">"qrcode_location.mp3"</span><span class="p">;</span> <span class="c1">// 儲存語音檔的名稱</span>

<span class="c1">// --- NTP 客戶端實例 ---</span>
<span class="n">WiFiUDP</span> <span class="n">ntpUDP</span><span class="p">;</span>
<span class="c1">// **更改 NTP 伺服器為 time.google.com，通常更穩定**</span>
<span class="n">NTPClient</span> <span class="nf">timeClient</span><span class="p">(</span><span class="n">ntpUDP</span><span class="p">,</span> <span class="s">"time.google.com"</span><span class="p">,</span> <span class="mi">8</span> <span class="o">*</span> <span class="mi">3600</span><span class="p">);</span> <span class="c1">// 8 * 3600 是 UTC+8 (台灣時區)</span>

<span class="c1">// --- 函數原型 ---</span>
<span class="kt">void</span> <span class="nf">initWiFi</span><span class="p">();</span>
<span class="kt">void</span> <span class="nf">initNTP</span><span class="p">();</span>
<span class="kt">void</span> <span class="nf">sdPlayMP3</span><span class="p">(</span><span class="n">String</span> <span class="n">filename</span><span class="p">);</span>

<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">115200</span><span class="p">);</span>

    <span class="c1">// 1. 初始化 WiFi 連線</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"--- 啟動 WiFi 連線 ---"</span><span class="p">);</span>
    <span class="n">initWiFi</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"WiFi 連線失敗，無法進行後續操作。請檢查 SSID/密碼或網路環境。"</span><span class="p">);</span>
        <span class="k">while</span> <span class="p">(</span><span class="nb">true</span><span class="p">);</span> <span class="c1">// 停止程式運行</span>
    <span class="p">}</span>

    <span class="c1">// 2. 初始化 NTP 時間同步 (在 WiFi 連線成功後執行)</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">--- 嘗試 NTP 時間同步 ---"</span><span class="p">);</span>
    <span class="n">initNTP</span><span class="p">();</span>

    <span class="c1">// 3. 配置攝影機影像通道並初始化</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">--- 初始化攝影機 ---"</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">configVideoChannel</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">,</span> <span class="n">config</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">videoInit</span><span class="p">();</span>

    <span class="c1">// 4. 啟動二維碼掃描器</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">--- 啟動二維碼掃描器 ---"</span><span class="p">);</span>
    <span class="n">Scanner</span><span class="p">.</span><span class="n">StartScanning</span><span class="p">();</span>

    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">系統已啟動，等待掃描二維碼..."</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> <span class="c1">// 控制掃描結果的檢索頻率</span>

    <span class="n">Scanner</span><span class="p">.</span><span class="n">GetResultString</span><span class="p">();</span>
    <span class="n">Scanner</span><span class="p">.</span><span class="n">GetResultLength</span><span class="p">();</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">Scanner</span><span class="p">.</span><span class="n">ResultString</span> <span class="o">!=</span> <span class="n">nullptr</span> <span class="o">&amp;&amp;</span> <span class="n">Scanner</span><span class="p">.</span><span class="n">ResultLength</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">String</span> <span class="n">locationName</span> <span class="o">=</span> <span class="n">String</span><span class="p">((</span><span class="kt">char</span><span class="o">*</span><span class="p">)</span><span class="n">Scanner</span><span class="p">.</span><span class="n">ResultString</span><span class="p">);</span> <span class="c1">// 修正中文亂碼問題</span>

        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"掃描到二維碼內容: "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">locationName</span><span class="p">);</span>

        <span class="c1">// 避免重複播放相同內容</span>
        <span class="k">static</span> <span class="n">String</span> <span class="n">lastScannedContent</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">locationName</span> <span class="o">!=</span> <span class="n">lastScannedContent</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">lastScannedContent</span> <span class="o">=</span> <span class="n">locationName</span><span class="p">;</span>

            <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"正在將文字轉換為語音: "</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">locationName</span><span class="p">);</span>
            <span class="c1">// 語音轉換，語言代碼為 "zh-TW" (繁體中文)</span>
            <span class="n">tts</span><span class="p">.</span><span class="n">googletts</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">,</span> <span class="n">locationName</span><span class="p">,</span> <span class="s">"zh-TW"</span><span class="p">);</span>

            <span class="c1">// 給予足夠時間讓 TTS 處理並將檔案寫入 SD 卡</span>
            <span class="c1">// 尤其在網路或 SD 卡速度較慢時，這個延遲很重要</span>
            <span class="n">delay</span><span class="p">(</span><span class="mo">000</span><span class="p">);</span> <span class="c1">// 從 500ms 增加到 2000ms</span>

            <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"正在播放語音: "</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">);</span>
            <span class="n">sdPlayMP3</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">);</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"內容相同，跳過語音播放。"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>


<span class="c1">// --- WiFi 初始化函數實現 ---</span>
<span class="kt">void</span> <span class="nf">initWiFi</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 增加嘗試次數</span>
        <span class="n">WiFi</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="n">ssid</span><span class="p">,</span> <span class="n">pass</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"正在連接到 "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">ssid</span><span class="p">);</span>

        <span class="kt">uint32_t</span> <span class="n">StartTime</span> <span class="o">=</span> <span class="n">millis</span><span class="p">();</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">((</span><span class="n">millis</span><span class="p">()</span> <span class="o">-</span> <span class="n">StartTime</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">10000</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 等待最多 10 秒</span>
                <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"WiFi 連線超時，嘗試下一次..."</span><span class="p">);</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">==</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">WiFi 連線成功！"</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"STA IP 位址: "</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">localIP</span><span class="p">());</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">WiFi 連線失敗。請檢查 SSID 和密碼，或更換網路環境。"</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// --- NTP 時間同步函數實現 ---</span>
<span class="kt">void</span> <span class="nf">initNTP</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"初始化 NTP 時間同步..."</span><span class="p">);</span>
    <span class="n">timeClient</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="c1">// 嘗試更新時間，最多等待 15 秒 (增加等待時間)</span>
    <span class="kt">long</span> <span class="n">timeout</span> <span class="o">=</span> <span class="n">millis</span><span class="p">();</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">timeClient</span><span class="p">.</span><span class="n">update</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">millis</span><span class="p">()</span> <span class="o">-</span> <span class="n">timeout</span> <span class="o">&lt;</span> <span class="mi">15000</span><span class="p">))</span> <span class="p">{</span>
        <span class="n">timeClient</span><span class="p">.</span><span class="n">forceUpdate</span><span class="p">();</span> <span class="c1">// 強制更新</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"."</span><span class="p">);</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> <span class="c1">// 每次嘗試間隔 1 秒</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">timeClient</span><span class="p">.</span><span class="n">update</span><span class="p">())</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">時間同步成功！當前時間: "</span> <span class="o">+</span> <span class="n">timeClient</span><span class="p">.</span><span class="n">getFormattedTime</span><span class="p">());</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">時間同步失敗！"</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"這 **非常可能** 影響到 SSL 加密連線到 Google 翻譯。"</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"請檢查：1. 您的網路是否阻擋 NTP (UDP 123 埠)？ 2. 您的板子韌體/庫是否最新？"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// --- SD 卡播放 MP3 函數實現 ---</span>
<span class="kt">void</span> <span class="nf">sdPlayMP3</span><span class="p">(</span><span class="n">String</span> <span class="n">filename</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">fs</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="n">String</span> <span class="n">filepath</span> <span class="o">=</span> <span class="n">String</span><span class="p">(</span><span class="n">fs</span><span class="p">.</span><span class="n">getRootPath</span><span class="p">())</span> <span class="o">+</span> <span class="n">filename</span><span class="p">;</span>
    <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="n">fs</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="n">MP3</span><span class="p">);</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">file</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"--- 無法打開 MP3 檔案: "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">filepath</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"可能是檔案不存在，或檔案已損壞，或 SD 卡有問題。"</span><span class="p">);</span>
        <span class="n">fs</span><span class="p">.</span><span class="n">end</span><span class="p">();</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"--- 正在設定音量並播放 MP3... "</span><span class="p">);</span>
    <span class="n">file</span><span class="p">.</span><span class="n">setMp3DigitalVol</span><span class="p">(</span><span class="mi">220</span><span class="p">);</span> <span class="c1">// 將音量提高到 220 (最大 255)</span>
    <span class="n">file</span><span class="p">.</span><span class="n">playMp3</span><span class="p">();</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"播放完畢或中斷。"</span><span class="p">);</span>
    <span class="n">file</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
    <span class="n">fs</span><span class="p">.</span><span class="n">end</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="實作成果">實作成果</h2>

<h3 id="照片">照片</h3>

<ol>
  <li>qrcode偵測 Damo</li>
</ol>

<p><img src="/assets/photo/Edge-Ai-Class-Project/AI盲人導航系統/螢幕擷取畫面%202025-06-12%20122548.png" alt="imag" /></p>

<p><img src="/assets/photo/Edge-Ai-Class-Project/AI盲人導航系統/螢幕擷取畫面%202025-06-12%20142153.png" alt="imag" /></p>

<h3 id="影片">影片</h3>

<p>Damo影片<br />
<a href="https://www.youtube.com/watch?v=muGBQxwAWqU"><img src="https://img.youtube.com/vi/muGBQxwAWqU/0.jpg" alt="IMAGE ALT TEXT HERE" /></a><br />
點擊圖片播放</p>]]></content><author><name>Li Kai_Huang</name><email>moray.huang@gmail.com</email></author><category term="1131邊緣運算課" /><category term="入門" /><category term="學習" /><category term="blog" /><summary type="html"><![CDATA[這篇文章會講解我邊緣運算的第六個專案 AI 盲人導航系統]]></summary></entry><entry><title type="html">AI 盲人視覺輔助系統</title><link href="http://localhost:4000/blog/AI-Class/project7/" rel="alternate" type="text/html" title="AI 盲人視覺輔助系統" /><published>2025-06-07T15:40:00+08:00</published><updated>2025-06-07T15:40:00+08:00</updated><id>http://localhost:4000/blog/AI-Class/edge-ai-class-project7</id><content type="html" xml:base="http://localhost:4000/blog/AI-Class/project7/"><![CDATA[<h1 id="ai-盲人視覺輔助系統">AI 盲人視覺輔助系統</h1>

<p>本報告旨在介紹一款創新且多功能的AI 盲人視覺輔助系統。該系統旨在透過整合多種感官輸入與先進人工智慧，為視障人士提供即時、全面的環境感知與語音導引。其核心功能包括：透過觸摸感應觸發系統；隨後，系統會拍攝當前影像並傳送至 Google Gemini Vision 詢問現場狀況；同時，它會將實時時鐘 (RTC) 時間資訊發送給 Gemini，以獲得時間相關的回應；更進一步地，系統支援麥克風錄製用戶語音並傳送給 Gemini 進行理解，AI 將返回相關文本回應，最終所有來自 Gemini 的文本都將透過文字轉語音 (TTS) 播放出來</p>

<ul>
  <li><a href="#ai-盲人視覺輔助系統">AI 盲人視覺輔助系統</a>
    <ul>
      <li><a href="#功能">功能</a></li>
      <li><a href="#genai程式碼設計流程">GenAI程式碼設計流程</a>
        <ul>
          <li><a href="#2-詳細軟體設計流程圖-detailed-software-design-flowchart---markdown-程式碼-最終且絕對修正版">2. 詳細軟體設計流程圖 (Detailed Software Design Flowchart) - Markdown 程式碼 (最終且絕對修正版)</a></li>
        </ul>
      </li>
      <li><a href="#程式碼產生提示">程式碼產生提示</a></li>
      <li><a href="#程式碼">程式碼</a></li>
      <li><a href="#實作成果">實作成果</a>
        <ul>
          <li><a href="#照片">照片</a></li>
          <li><a href="#影片">影片</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="功能">功能</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 觸摸（ADC）

2. 拍攝影像並傳送給 Gemini 並詢問現場狀況

3. 發送 RTC時間訊息給 Gemini 並返回文本

4. 麥克風錄製音訊並發送給 Gemini 返回文本，然後進行文本轉語音
</code></pre></div></div>

<h2 id="genai程式碼設計流程">GenAI程式碼設計流程</h2>

<pre><code class="language-mermaid">graph TD
    A[開始] --&gt; B(系統啟動/待機);
    B --&gt; C(用戶觸摸感應器 - ADC);
    C --&gt; D[觸摸信號];
    D --&gt; E[同步執行];
    E --&gt; E1[拍攝影像];
    E --&gt; E2[讀取 RTC 時間];
    E --&gt; E3[麥克風錄製音訊];
    
    E1 --&gt; F{影像數據};
    E2 --&gt; G{時間數據};
    E3 --&gt; H{音訊數據};
    
    F &amp; G &amp; H --&gt; I[打包多模態數據];
    I --&gt; J[發送打包數據至 Google Gemini - 多模態輸入];
    J --&gt; K{Gemini 分析並返回多段文本回應};
    
    K -- 成功返回 --&gt; L[接收 Gemini 回應文本];
    L --&gt; M[將所有文本發送至 Google TTS];
    M --&gt; N{TTS 生成整合 MP3 語音};
    N -- 成功 --&gt; O[接收整合 MP3 語音檔];
    N -- 失敗 --&gt; P[TTS 錯誤處理/提示音];
    P --&gt; B;

    O --&gt; Q[播放整合 MP3 語音];
    Q --&gt; R[語音播報完成];
    R --&gt; B;

    K -- 失敗/超時 --&gt; S[Gemini 錯誤處理/提示音];
    S --&gt; B;
</code></pre>
<p><strong>說明：</strong></p>

<ul>
  <li>我在 <code class="language-plaintext highlighter-rouge">B(用戶觸摸感應器 ADC);</code> 節點中將 <code class="language-plaintext highlighter-rouge">ADC</code> 改為 <code class="language-plaintext highlighter-rouge">- ADC</code>。</li>
  <li>我在 <code class="language-plaintext highlighter-rouge">I --&gt; J[發送打包數據至 Google Gemini (多模態輸入)];</code> 節點中將 <code class="language-plaintext highlighter-rouge">(多模態輸入)</code> 改為 <code class="language-plaintext highlighter-rouge">- 多模態輸入</code>。</li>
  <li>我在 <code class="language-plaintext highlighter-rouge">K{Gemini 分析並返回多段文本回應};</code> 節點中，這個節點本身沒有括號，保持不變。</li>
  <li>我在 <code class="language-plaintext highlighter-rouge">N{TTS 生成整合 MP3 語音};</code> 節點中，這個節點本身沒有括號，保持不變。</li>
</ul>

<hr />

<h3 id="2-詳細軟體設計流程圖-detailed-software-design-flowchart---markdown-程式碼-最終且絕對修正版">2. 詳細軟體設計流程圖 (Detailed Software Design Flowchart) - Markdown 程式碼 (最終且絕對修正版)</h3>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">mermaid
</span><span class="sb">graph TD
    A[系統初始化] --&gt; B[設定 Wi-Fi 連線];
    B --&gt; C[初始化攝影機模組];
    C --&gt; D[初始化 RTC 模組];
    D --&gt; E[初始化麥克風輸入模組];
    E --&gt; F[初始化音訊輸出模組];
    F --&gt; G{等待觸摸 ADC 訊號};

    G -- 觸摸訊號觸發 --&gt; H[開始多模態數據採集];
    H --&gt; I[捕捉當前影像幀];
    H --&gt; J[讀取當前 RTC 時間];
    H --&gt; K[錄製音訊 N 秒 - 麥克風];
    
    I --&gt; L[影像數據預處理/壓縮為 JPG];
    J --&gt; M[格式化時間數據為文本];
    K --&gt; N[音訊數據預處理/編碼為適當格式];
    
    L &amp; M &amp; N --&gt; O[組裝多模態 JSON/HTTP 請求 Payload];
    O --&gt; P[發送 Payload 至 Google Gemini API];
    P --&gt; Q{等待 Gemini API 回應};

    Q -- 成功接收 --&gt; R[解析 Gemini JSON 回應];
    R --&gt; S[提取所有文本回應 例如 場景描述、時間訊息、語音回覆];
    S --&gt; T[將提取的所有文本拼接為單一字符串 或 分段處理];
    T --&gt; U[準備 HTTP/HTTPS 請求到 Google TTS];
    U --&gt; V[發送拼接文本至 Google TTS API];
    V --&gt; W{等待 TTS API 回應};

    W -- 成功接收 --&gt; X[接收並緩衝整合 MP3 語音數據流];
    X --&gt; Y[MP3 解碼與音訊播放];
    Y --&gt; Z[等待語音播放完成];
    Z --&gt; G;

    Q -- 失敗/超時 --&gt; AA[處理 Gemini 錯誤/重試/日誌];
    AA --&gt; G;

    W -- 失敗/超時 --&gt; BB[處理 TTS 錯誤/重試/日誌];
    BB --&gt; G;
</span></code></pre></div></div>

<p><strong>流程圖說明：</strong></p>

<ul>
  <li><strong>開始 (Start)：</strong> 系統啟動流程。</li>
  <li><strong>系統啟動/待機 (System Startup/Standby)：</strong> 系統初始化並等待用戶觸發。</li>
  <li><strong>用戶觸摸感應器 (ADC) (User Touches Sensor (ADC))：</strong> 用戶透過觸摸感應器（ADC 輸入）觸發系統。</li>
  <li><strong>觸摸信號 (Touch Signal)：</strong> 觸摸感應器發出的信號。</li>
  <li><strong>同步執行 (Execute Simultaneously)：</strong> 表示以下三個動作幾乎同時進行。
    <ul>
      <li><strong>拍攝影像 (Capture Image)：</strong> 攝影機捕捉當前環境影像。</li>
      <li><strong>讀取 RTC 時間 (Read RTC Time)：</strong> 讀取實時時鐘的當前時間。</li>
      <li><strong>麥克風錄製音訊 (Microphone Record Audio)：</strong> 麥克風錄製用戶的語音輸入（如果用戶有提問）。</li>
    </ul>
  </li>
  <li><strong>影像數據 (Image Data)：</strong> 捕捉到的圖像數據。</li>
  <li><strong>時間數據 (Time Data)：</strong> 從 RTC 獲取的時間信息。</li>
  <li><strong>音訊數據 (Audio Data)：</strong> 麥克風錄製的音訊數據。</li>
  <li><strong>打包多模態數據 (Package Multi-modal Data)：</strong> 將影像、時間和音訊數據整合為一個請求包。</li>
  <li><strong>發送打包數據至 Google Gemini (多模態輸入) (Send Packaged Data to Google Gemini (Multi-modal Input))：</strong> 將整合後的數據發送給 Google Gemini API。</li>
  <li><strong>Gemini 分析並返回多段文本回應 (Gemini Analyzes &amp; Returns Multiple Text Responses)：</strong> Gemini 處理多模態輸入，並返回現場狀況描述、時間相關信息和語音交互的回應等文本。</li>
  <li><strong>成功返回 (Successful Return)：</strong> 如果 Gemini 成功返回回應。</li>
  <li><strong>接收 Gemini 回應文本 (Receive Gemini Response Text)：</strong> 接收來自 Gemini 的所有文本內容。</li>
  <li><strong>將所有文本發送至 Google TTS (Send All Text to Google TTS)：</strong> 將從 Gemini 獲得的所有文本發送給 Google TTS API。</li>
  <li><strong>TTS 生成整合 MP3 語音 (TTS Generates Integrated MP3 Audio)：</strong> Google TTS 將多段文本整合成一個或多個 MP3 語音檔案。</li>
  <li><strong>成功 (Success)：</strong> 如果 TTS 成功生成語音。</li>
  <li><strong>接收整合 MP3 語音檔 (Receive Integrated MP3 Audio File)：</strong> 接收從 TTS 返回的 MP3 語音數據。</li>
  <li><strong>失敗 (Failure)：</strong> 如果 TTS 服務失敗或超時。</li>
  <li><strong>TTS 錯誤處理/提示音 (TTS Error Handling/Prompt Tone)：</strong> 執行錯誤處理或播放提示音。</li>
  <li><strong>播放整合 MP3 語音 (Play Integrated MP3 Audio)：</strong> 透過音訊輸出裝置播放整合後的語音。</li>
  <li><strong>語音播報完成 (Voice Broadcast Complete)：</strong> 語音播放結束。</li>
  <li><strong>Gemini 錯誤處理/提示音 (Gemini Error Handling/Prompt Tone)：</strong> 如果 Gemini API 呼叫失敗，執行錯誤處理或播放提示音。</li>
  <li><strong>返回到系統啟動/待機 (Return to System Startup/Standby)：</strong> 系統回到初始狀態，等待下一次觸發。</li>
</ul>

<h2 id="程式碼產生提示">程式碼產生提示</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>首先我有一個按鈕是用來啟動的

接著我有一個鏡頭用來看環境

TFT LCD 用來輸出回傳的文字跟鏡頭畫面

最後我有一個喇叭要將文字轉成語音播報

請用我給的範例 組合出符合功能的程式碼 ## 程式碼  
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;WiFi.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;WiFiUdp.h&gt;</span><span class="c1">          // Often included with WiFi.h for network functions</span><span class="cp">
#include</span> <span class="cpf">"GenAI.h"</span><span class="c1">            // For LLM (Vision, Text) and TTS</span><span class="cp">
#include</span> <span class="cpf">"VideoStream.h"</span><span class="c1">      // For Camera operations</span><span class="cp">
#include</span> <span class="cpf">"SPI.h"</span><span class="c1">              // For SPI communication with LCD</span><span class="cp">
#include</span> <span class="cpf">"AmebaILI9341.h"</span><span class="c1">     // For ILI9341 TFT LCD driver</span><span class="cp">
#include</span> <span class="cpf">"TJpg_Decoder.h"</span><span class="c1">     // For JPEG decoder to display camera output on LCD</span><span class="cp">
#include</span> <span class="cpf">&lt;AmebaFatFS.h&gt;</span><span class="c1">       // For SD card operations (saving MP3 for TTS)</span><span class="cp">
#include</span> <span class="cpf">"rtc.h"</span><span class="c1">              // For Real-Time Clock</span><span class="cp">
#include</span> <span class="cpf">&lt;time.h&gt;</span><span class="c1">             // For time structures (struct tm)</span><span class="cp">
#include</span> <span class="cpf">"StreamIO.h"</span><span class="c1">         // For audio streaming - RE-ADDED</span><span class="cp">
#include</span> <span class="cpf">"AudioStream.h"</span><span class="c1">      // For audio input (microphone) - RE-ADDED</span><span class="cp">
#include</span> <span class="cpf">"AudioEncoder.h"</span><span class="c1">     // For audio encoding - RE-ADDED</span><span class="cp">
#include</span> <span class="cpf">"MP4Recording.h"</span><span class="c1">     // For recording audio to MP4 - RE-ADDED</span><span class="cp">
#include</span> <span class="cpf">"Base64.h"</span><span class="c1">           // For Base64 encoding - RE-ADDED</span><span class="cp">
#include</span> <span class="cpf">&lt;ArduinoJson.h&gt;</span><span class="c1">      // For JSON parsing - RE-ADDED</span><span class="cp">
</span>
<span class="c1">// 請替換為你的網路 SSID 和密碼</span>
<span class="kt">char</span> <span class="n">wifi_ssid</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
<span class="kt">char</span> <span class="n">wifi_pass</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>

<span class="c1">// --- API 金鑰 ---</span>
<span class="n">String</span> <span class="n">Gemini_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span> <span class="c1">// &lt;&lt;&lt; 重要：請替換為你的實際金鑰</span>
<span class="n">String</span> <span class="n">openAI_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span> <span class="c1">// Not strictly needed for this example, but keep it as a placeholder. (此範例非必需，但作為佔位符保留。)</span>
<span class="n">String</span> <span class="n">Llama_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>  <span class="c1">// Not strictly needed for this example, but keep it as placeholder. (此範例非必需，但作為佔位符保留。)</span>

<span class="c1">// SD Card MP3 Filename for TTS output (用於 TTS 輸出的 SD 卡 MP3 檔案名稱)</span>
<span class="n">String</span> <span class="n">mp3Filename</span> <span class="o">=</span> <span class="s">"broadcast_output.mp3"</span><span class="p">;</span>

<span class="c1">// Audio Recording Configuration for Speech-to-Text (用於語音轉文字的音訊錄製配置)</span>
<span class="n">String</span> <span class="n">audioRecordFilename</span> <span class="o">=</span> <span class="s">"user_input"</span><span class="p">;</span> <span class="c1">// Filename for recorded audio</span>
<span class="kt">int</span> <span class="n">recordSeconds</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>                     <span class="c1">// Duration for audio recording (e.g., 5 seconds for user query)</span>

<span class="c1">// Camera Configuration (相機配置)</span>
<span class="c1">// Adjusted resolution for troubleshooting Bus Fault / VOE initialization issues.</span>
<span class="c1">// Start with a lower resolution to reduce memory pressure and complexity.</span>
<span class="n">VideoSetting</span> <span class="nf">config</span><span class="p">(</span><span class="mi">320</span><span class="p">,</span> <span class="mi">240</span><span class="p">,</span> <span class="n">CAM_FPS</span><span class="p">,</span> <span class="n">VIDEO_JPEG</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// FIXED: Reduced camera resolution for troubleshooting</span>
<span class="cp">#define CHANNEL 0 // Camera channel
</span>
<span class="kt">uint32_t</span> <span class="n">img_addr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// Memory address of the captured image</span>
<span class="kt">uint32_t</span> <span class="n">img_len</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>  <span class="c1">// Length of the captured image data</span>

<span class="c1">// Prompt message for the LLM Vision model (用於 LLM 影像模型提示訊息)</span>
<span class="c1">// This will be dynamically updated with time and user's voice query.</span>
<span class="n">String</span> <span class="n">prompt_msg_base</span> <span class="o">=</span> <span class="s">"請問圖片中的內容是什麼?請用繁體中文，簡潔地回答。"</span><span class="p">;</span>

<span class="c1">// Pin Definitions (引腳定義)</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">buttonPin</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// The pin connected to the pushbutton (連接到按鈕的引腳)</span>
<span class="c1">// LED_B and LED_G are already defined in AmebaPro2's variant.h (LED_B 和 LED_G 已在 AmebaPro2 的 variant.h 中定義)</span>

<span class="c1">// TFT LCD Pin Definitions (TFT LCD 引腳定義)</span>
<span class="cp">#define TFT_RESET 5   // Reset pin
#define TFT_DC    4   // Data/Command pin
#define TFT_CS    SPI_SS // Chip Select pin (using default SPI SS)
</span>
<span class="n">AmebaILI9341</span> <span class="n">tft</span> <span class="o">=</span> <span class="n">AmebaILI9341</span><span class="p">(</span><span class="n">TFT_CS</span><span class="p">,</span> <span class="n">TFT_DC</span><span class="p">,</span> <span class="n">TFT_RESET</span><span class="p">);</span> <span class="c1">// TFT LCD object</span>

<span class="cp">#define ILI9341_SPI_FREQUENCY 20000000 // SPI frequency for LCD
</span>
<span class="c1">// Constants for LCD dimensions and font sizes (for missing tft.height() and tft.getFontSize())</span>
<span class="c1">// (用於 LCD 尺寸和字體大小的常數，因為缺少 tft.height() 和 tft.getFontSize())</span>
<span class="c1">// ILI9341 is typically 240x320. With setRotation(2), it's logically 320px wide by 240px tall.</span>
<span class="cp">#define LCD_WIDTH_ROTATED   320
#define LCD_HEIGHT_ROTATED  240
#define FONT_SIZE_LEVEL1_PIX_HEIGHT 8  // Approximate pixel height for font size 1
#define FONT_SIZE_LEVEL2_PIX_HEIGHT 16 // Approximate pixel height for font size 2 (8 * 2)
</span>
<span class="c1">// --- Global Objects --- (全域物件)</span>
<span class="n">WiFiSSLClient</span> <span class="n">client</span><span class="p">;</span> <span class="c1">// For secure HTTP connections to APIs (用於安全 HTTP 連接到 API)</span>
<span class="n">GenAI</span> <span class="n">llm</span><span class="p">;</span>            <span class="c1">// Object for interacting with Generative AI LLM (Gemini Vision, STT, Text)</span>
<span class="n">GenAI</span> <span class="n">tts</span><span class="p">;</span>            <span class="c1">// Object for interacting with Text-to-Speech (Google TTS)</span>
<span class="n">AmebaFatFS</span> <span class="n">fs</span><span class="p">;</span>        <span class="c1">// File system object for SD card (SD 卡檔案系統物件)</span>

<span class="c1">// For RTC (用於即時時鐘)</span>
<span class="kt">long</span> <span class="kt">long</span> <span class="n">currentEpochSeconds</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">struct</span> <span class="n">tm</span> <span class="o">*</span><span class="n">timeinfo</span><span class="p">;</span>

<span class="c1">// For Audio Processing (用於音訊處理) - RE-ADDED</span>
<span class="n">AudioSetting</span> <span class="nf">configA</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="c1">// Audio configuration (e.g., sample rate)</span>
<span class="n">Audio</span> <span class="n">audio</span><span class="p">;</span>             <span class="c1">// Audio input from microphone</span>
<span class="n">AAC</span> <span class="n">aac</span><span class="p">;</span>                 <span class="c1">// AAC audio encoder</span>
<span class="n">MP4Recording</span> <span class="n">mp4</span><span class="p">;</span>        <span class="c1">// MP4 recording module (to save audio for STT)</span>
<span class="n">StreamIO</span> <span class="nf">audioStreamer1</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// Stream from audio input to encoder</span>
<span class="n">StreamIO</span> <span class="nf">audioStreamer2</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// Stream from encoder to MP4 recording</span>

<span class="c1">// --- Function Prototypes --- (函數原型)</span>
<span class="kt">void</span> <span class="nf">initWiFi</span><span class="p">();</span>
<span class="kt">void</span> <span class="nf">init_tft</span><span class="p">();</span>
<span class="n">bool</span> <span class="nf">tft_output</span><span class="p">(</span><span class="kt">int16_t</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int16_t</span> <span class="n">y</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">w</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">h</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="o">*</span><span class="n">bitmap</span><span class="p">);</span>
<span class="kt">void</span> <span class="nf">sdPlayMP3</span><span class="p">(</span><span class="n">String</span> <span class="n">filename</span><span class="p">);</span>
<span class="n">String</span> <span class="nf">getFormattedTime</span><span class="p">();</span>

<span class="c1">// --- Main Setup --- (主要設定)</span>
<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">115200</span><span class="p">);</span> <span class="c1">// Initialize serial communication for debugging (初始化序列通訊用於偵錯)</span>

    <span class="n">SPI</span><span class="p">.</span><span class="n">setDefaultFrequency</span><span class="p">(</span><span class="n">ILI9341_SPI_FREQUENCY</span><span class="p">);</span> <span class="c1">// Set SPI frequency for LCD (設定 LCD 的 SPI 頻率)</span>
    <span class="n">initWiFi</span><span class="p">();</span> <span class="c1">// Initialize Wi-Fi connection (初始化 Wi-Fi 連線)</span>

    <span class="c1">// Initialize RTC (初始化即時時鐘)</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Initializing RTC..."</span><span class="p">);</span>
    <span class="n">rtc</span><span class="p">.</span><span class="n">Init</span><span class="p">();</span>
    <span class="c1">// Set initial RTC time (adjust if needed, or get from NTP later)</span>
    <span class="c1">// For now, setting a fixed initial time for demonstration purposes.</span>
    <span class="c1">// In a real application, you might want to use NTP to get accurate time.</span>
    <span class="c1">// (設定初始 RTC 時間（如有需要可調整，或稍後從 NTP 獲取）。</span>
    <span class="c1">//  目前僅設定固定初始時間用於演示。在實際應用中，你可能希望使用 NTP 獲取準確時間。)</span>
    <span class="kt">long</span> <span class="kt">long</span> <span class="n">epochTime</span> <span class="o">=</span> <span class="n">rtc</span><span class="p">.</span><span class="n">SetEpoch</span><span class="p">(</span><span class="mi">2025</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// Year, Month, Day, Hour, Min, Sec (年, 月, 日, 時, 分, 秒)</span>
    <span class="n">rtc</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">epochTime</span><span class="p">);</span>

    <span class="c1">// Configure Audio input, encoder, and MP4 recorder for Speech-to-Text - RE-ADDED</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Configuring audio for recording..."</span><span class="p">);</span>
    <span class="n">audio</span><span class="p">.</span><span class="n">configAudio</span><span class="p">(</span><span class="n">configA</span><span class="p">);</span>
    <span class="n">audio</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="n">aac</span><span class="p">.</span><span class="n">configAudio</span><span class="p">(</span><span class="n">configA</span><span class="p">);</span>
    <span class="n">aac</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="n">mp4</span><span class="p">.</span><span class="n">configAudio</span><span class="p">(</span><span class="n">configA</span><span class="p">,</span> <span class="n">CODEC_AAC</span><span class="p">);</span>
    <span class="n">mp4</span><span class="p">.</span><span class="n">setRecordingDuration</span><span class="p">(</span><span class="n">recordSeconds</span><span class="p">);</span>
    <span class="n">mp4</span><span class="p">.</span><span class="n">setRecordingFileCount</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
    <span class="n">mp4</span><span class="p">.</span><span class="n">setRecordingFileName</span><span class="p">(</span><span class="n">audioRecordFilename</span><span class="p">);</span>
    <span class="n">mp4</span><span class="p">.</span><span class="n">setRecordingDataType</span><span class="p">(</span><span class="n">STORAGE_AUDIO</span><span class="p">);</span>

    <span class="c1">// Link audio streams: Mic -&gt; AAC Encoder -&gt; MP4 Recorder - RE-ADDED</span>
    <span class="n">audioStreamer1</span><span class="p">.</span><span class="n">registerInput</span><span class="p">(</span><span class="n">audio</span><span class="p">);</span>
    <span class="n">audioStreamer1</span><span class="p">.</span><span class="n">registerOutput</span><span class="p">(</span><span class="n">aac</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">audioStreamer1</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"ERROR: Audio StreamIO link 1 (Mic to AAC) start failed!"</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">audioStreamer2</span><span class="p">.</span><span class="n">registerInput</span><span class="p">(</span><span class="n">aac</span><span class="p">);</span>
    <span class="n">audioStreamer2</span><span class="p">.</span><span class="n">registerOutput</span><span class="p">(</span><span class="n">mp4</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">audioStreamer2</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"ERROR: Audio StreamIO link 2 (AAC to MP4) start failed!"</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">audio</span><span class="p">.</span><span class="n">printInfo</span><span class="p">();</span> <span class="c1">// Print audio information to serial</span>

    <span class="c1">// Camera Configuration (相機配置)</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Configuring Camera..."</span><span class="p">);</span>
    <span class="n">config</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="c1">// Set camera rotation if needed</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">configVideoChannel</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">,</span> <span class="n">config</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">videoInit</span><span class="p">();</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">channelBegin</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">printInfo</span><span class="p">();</span> <span class="c1">// Print camera information to serial</span>

    <span class="c1">// Configure GPIO pins (配置 GPIO 引腳)</span>
    <span class="n">pinMode</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">,</span> <span class="n">INPUT</span><span class="p">);</span> <span class="c1">// Button pin (assuming external pull-down if not INPUT_PULLUP)</span>
    <span class="n">pinMode</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span> <span class="c1">// Blue LED (now correctly using the pre-defined macro)</span>
    <span class="n">pinMode</span><span class="p">(</span><span class="n">LED_G</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span> <span class="c1">// Green LED (now correctly using the pre-defined macro)</span>

    <span class="c1">// Initialize TFT LCD (初始化 TFT LCD)</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Initializing TFT LCD..."</span><span class="p">);</span>
    <span class="n">init_tft</span><span class="p">();</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"GenAI Vision &amp; TTS"</span><span class="p">);</span> <span class="c1">// Initial message on LCD</span>

    <span class="c1">// Setup JPEG decoder callback for LCD (設定 JPEG 解碼器回調函數用於 LCD)</span>
    <span class="n">TJpgDec</span><span class="p">.</span><span class="n">setJpgScale</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="c1">// Set scale factor (1 = no scaling, 2 = 1/2, 4 = 1/4, 8 = 1/8)</span>
                           <span class="c1">// Use 1 for best quality if image size fits LCD, or higher for smaller images.</span>
    <span class="n">TJpgDec</span><span class="p">.</span><span class="n">setCallback</span><span class="p">(</span><span class="n">tft_output</span><span class="p">);</span> <span class="c1">// Set the callback function for drawing JPEG blocks to TFT</span>

    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Setup complete. Waiting for button press to interact..."</span><span class="p">);</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">50</span><span class="p">);</span> <span class="c1">// Move cursor down for next message</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Press button to start"</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// --- Main Loop --- (主循環)</span>
<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span> <span class="p">{</span>
    <span class="c1">// Check if the button is pressed</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">digitalRead</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">)</span> <span class="o">==</span> <span class="n">HIGH</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// Assuming button is HIGH when pressed</span>
        <span class="c1">// Debounce delay (去抖延遲)</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">digitalRead</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">)</span> <span class="o">==</span> <span class="n">HIGH</span><span class="p">);</span> <span class="c1">// Wait until button is released</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span> <span class="c1">// Debounce after release</span>

        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Button pressed! Starting interaction..."</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span> <span class="c1">// Clear LCD</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Speak your query:"</span><span class="p">);</span>
        <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_G</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span> <span class="c1">// Green LED ON while processing</span>

        <span class="c1">// Step 1: Indicate recording with blinking blue LED (藍色 LED 閃爍表示錄音中)</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">count</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="n">count</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
            <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// Step 2: Record user's voice command for Speech-to-Text - RE-ADDED</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Recording audio for "</span> <span class="o">+</span> <span class="n">String</span><span class="p">(</span><span class="n">recordSeconds</span><span class="p">)</span> <span class="o">+</span> <span class="s">" seconds..."</span><span class="p">);</span>
        <span class="c1">// Removed 'bool recordedTextSuccess =' as llm.geminiaudio returns String</span>
        <span class="n">String</span> <span class="n">recordedText</span> <span class="o">=</span> <span class="n">llm</span><span class="p">.</span><span class="n">geminiaudio</span><span class="p">(</span><span class="n">Gemini_key</span><span class="p">,</span> <span class="n">audioRecordFilename</span><span class="p">,</span> <span class="s">"gemini-2.0-flash"</span><span class="p">,</span> <span class="n">mp4</span><span class="p">,</span> <span class="s">"Please transcribe the audio into text."</span><span class="p">,</span> <span class="n">client</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"User said: "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">recordedText</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">recordedText</span><span class="p">.</span><span class="n">length</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">recordedText</span><span class="p">.</span><span class="n">indexOf</span><span class="p">(</span><span class="s">"Connect to generativelanguage.googleapis.com failed."</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// Check for actual failure or error message</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Speech detected or transcription failed, or API connection failed. Please try again."</span><span class="p">);</span>
            <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_G</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"API/Speech failed!"</span><span class="p">);</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">FONT_SIZE_LEVEL2_PIX_HEIGHT</span><span class="p">);</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Check WiFi/API Key/Certs."</span><span class="p">);</span> <span class="c1">// Added a more specific message for common issues</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">2000</span><span class="p">);</span> <span class="c1">// Wait a bit before allowing another press</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">// Display transcribed text on LCD</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"You said:"</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setFontSize</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">recordedText</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setFontSize</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> <span class="c1">// Show transcribed text for a moment</span>

        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Capturing image..."</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Capturing Image..."</span><span class="p">);</span>

        <span class="c1">// Step 3: Camera take image (相機捕捉圖像)</span>
        <span class="n">Camera</span><span class="p">.</span><span class="n">getImage</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_addr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_len</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Image captured: address=0x"</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">((</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">HEX</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">", length="</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="n">img_len</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">" bytes"</span><span class="p">);</span>

        <span class="c1">// Step 4: JPEG decode image &amp; display on TFT LCD (JPEG 解碼圖像並顯示在 TFT LCD 上)</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span> <span class="c1">// Clear LCD again for image display</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// Reset cursor</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Displaying image on LCD..."</span><span class="p">);</span>
        <span class="n">TJpgDec</span><span class="p">.</span><span class="n">drawJpg</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">);</span> <span class="c1">// Draw JPEG from memory to LCD</span>

        <span class="c1">// Step 5: Get current time from RTC (步驟 5：從 RTC 獲取當前時間)</span>
        <span class="n">currentEpochSeconds</span> <span class="o">=</span> <span class="n">rtc</span><span class="p">.</span><span class="n">Read</span><span class="p">();</span>
        <span class="n">String</span> <span class="n">formattedTime</span> <span class="o">=</span> <span class="n">getFormattedTime</span><span class="p">();</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Current Time: "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">formattedTime</span><span class="p">);</span>

        <span class="c1">// Step 6: Prepare prompt for LLM Vision (為 LLM 影像模型準備提示)</span>
        <span class="c1">// Combine current time, image description request, AND user's voice query</span>
        <span class="n">String</span> <span class="n">full_prompt_msg</span> <span class="o">=</span> <span class="s">"現在時間是 "</span> <span class="o">+</span> <span class="n">formattedTime</span> <span class="o">+</span> <span class="s">"。</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
        <span class="n">full_prompt_msg</span> <span class="o">+=</span> <span class="s">"圖片中的內容是什麼？請使用繁體中文，簡潔地回答。</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
        <span class="n">full_prompt_msg</span> <span class="o">+=</span> <span class="s">"用戶的語音查詢是：「"</span> <span class="o">+</span> <span class="n">recordedText</span> <span class="o">+</span> <span class="s">"」。請綜合圖片內容和用戶語音查詢，生成一段簡潔的繁體中文回應。"</span><span class="p">;</span>

        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Sending prompt to LLM Vision: "</span> <span class="o">+</span> <span class="n">full_prompt_msg</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">LCD_HEIGHT_ROTATED</span> <span class="o">-</span> <span class="n">FONT_SIZE_LEVEL2_PIX_HEIGHT</span> <span class="o">*</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">// Position text near bottom</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Analyzing image &amp; query..."</span><span class="p">);</span>

        <span class="c1">// Step 7: Send image and prompt to LLM Vision (Gemini Vision)</span>
        <span class="c1">// (步驟 7：將圖像和提示發送給 LLM 影像模型（Gemini Vision）)</span>
        <span class="n">String</span> <span class="n">visionResponse</span> <span class="o">=</span> <span class="n">llm</span><span class="p">.</span><span class="n">geminivision</span><span class="p">(</span><span class="n">Gemini_key</span><span class="p">,</span> <span class="s">"gemini-2.0-flash"</span><span class="p">,</span> <span class="n">full_prompt_msg</span><span class="p">,</span> <span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">,</span> <span class="n">client</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">visionResponse</span><span class="p">.</span><span class="n">length</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">visionResponse</span><span class="p">.</span><span class="n">indexOf</span><span class="p">(</span><span class="s">"Connect to generativelanguage.googleapis.com failed."</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// Check for actual failure or error message</span>
            <span class="n">visionResponse</span> <span class="o">=</span> <span class="s">"抱歉，無法識別圖片內容或獲取回應。請再試一次。連線錯誤。"</span><span class="p">;</span> <span class="c1">// More specific error message</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"LLM Vision API connection failed."</span><span class="p">);</span>
            <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_G</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Vision API Failed!"</span><span class="p">);</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">FONT_SIZE_LEVEL2_PIX_HEIGHT</span><span class="p">);</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Check WiFi/API Key/Certs."</span><span class="p">);</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">2000</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"LLM Vision Response: "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">visionResponse</span><span class="p">);</span>

        <span class="c1">// Step 8: Text-To-Speech &amp; play mp3 file (文字轉語音並播放 mp3 檔案)</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span> <span class="c1">// Clear LCD for TTS status</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Broadcast:"</span><span class="p">);</span>
        <span class="c1">// Display LLM response on LCD</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setFontSize</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="c1">// Smaller font for detail</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">visionResponse</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setFontSize</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// Revert to larger font for next status</span>

        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Converting text to speech..."</span><span class="p">);</span>
        <span class="c1">// Removed boolean assignment as tts.googletts is a void function.</span>
        <span class="c1">// Success of TTS is now primarily checked by sdPlayMP3 attempting to open the file.</span>
        <span class="n">tts</span><span class="p">.</span><span class="n">googletts</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">,</span> <span class="n">visionResponse</span><span class="p">,</span> <span class="s">"zh-TW"</span><span class="p">);</span> <span class="c1">// "zh-TW" for Traditional Chinese</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span> <span class="c1">// Give some time for file to be written</span>

        <span class="c1">// Step 9: Play the generated MP3 (播放生成的 MP3)</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Playing broadcast..."</span><span class="p">);</span>
        <span class="n">sdPlayMP3</span><span class="p">(</span><span class="n">mp3Filename</span><span class="p">);</span> <span class="c1">// This function now has improved error handling</span>

        <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_G</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span> <span class="c1">// Green LED OFF after processing</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Broadcast complete. Waiting for next button press..."</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">LCD_HEIGHT_ROTATED</span> <span class="o">-</span> <span class="n">FONT_SIZE_LEVEL2_PIX_HEIGHT</span><span class="p">);</span> <span class="c1">// Position text near bottom</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Done. Press button."</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span> <span class="c1">// Small delay to prevent busy-waiting</span>
<span class="p">}</span>

<span class="c1">// --- Helper Functions --- (輔助函數)</span>

<span class="c1">// Initialize Wi-Fi connection (初始化 Wi-Fi 連線)</span>
<span class="kt">void</span> <span class="nf">initWiFi</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">WiFi</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="n">wifi_ssid</span><span class="p">,</span> <span class="n">wifi_pass</span><span class="p">);</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Connecting to "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">wifi_ssid</span><span class="p">);</span>

        <span class="kt">uint32_t</span> <span class="n">startTime</span> <span class="o">=</span> <span class="n">millis</span><span class="p">();</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">((</span><span class="n">millis</span><span class="p">()</span> <span class="o">-</span> <span class="n">startTime</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">10000</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 10 second timeout</span>
                <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Wi-Fi connection timed out. Retrying..."</span><span class="p">);</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">==</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Wi-Fi connected!"</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"STA IP address: "</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">localIP</span><span class="p">());</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span>
            <span class="k">return</span><span class="p">;</span> <span class="c1">// Exit function if connected</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Failed to connect to Wi-Fi after multiple attempts."</span><span class="p">);</span>
    <span class="c1">// In a real application, you might want to add error handling here.</span>
<span class="p">}</span>

<span class="c1">// Initialize TFT LCD (初始化 TFT LCD)</span>
<span class="kt">void</span> <span class="nf">init_tft</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// Adjust rotation as needed for your LCD orientation</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span> <span class="c1">// Clear the screen</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// Set cursor to top-left</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setForeground</span><span class="p">(</span><span class="n">ILI9341_GREEN</span><span class="p">);</span> <span class="c1">// Set text color</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setFontSize</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// Set font size (1 is smallest, 2 is medium, etc.)</span>
<span class="p">}</span>

<span class="c1">// Callback function for JPEG decoder to draw blocks to TFT (JPEG 解碼器繪製區塊到 TFT 的回調函數)</span>
<span class="n">bool</span> <span class="nf">tft_output</span><span class="p">(</span><span class="kt">int16_t</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int16_t</span> <span class="n">y</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">w</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">h</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="o">*</span><span class="n">bitmap</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">drawBitmap</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">bitmap</span><span class="p">);</span> <span class="c1">// Draw the decoded bitmap block</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// Return 1 to decode next block</span>
<span class="p">}</span>

<span class="c1">// Play MP3 file from SD card (從 SD 卡播放 MP3 檔案)</span>
<span class="kt">void</span> <span class="nf">sdPlayMP3</span><span class="p">(</span><span class="n">String</span> <span class="n">filename</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// Attempt to begin file system operation</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">fs</span><span class="p">.</span><span class="n">begin</span><span class="p">())</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"ERROR: Failed to mount SD card file system!"</span><span class="p">);</span>
        <span class="k">return</span><span class="p">;</span> <span class="c1">// Exit if SD card cannot be mounted</span>
    <span class="p">}</span>

    <span class="n">String</span> <span class="n">filepath</span> <span class="o">=</span> <span class="n">String</span><span class="p">(</span><span class="n">fs</span><span class="p">.</span><span class="n">getRootPath</span><span class="p">())</span> <span class="o">+</span> <span class="n">filename</span><span class="p">;</span>
    <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="n">fs</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="n">MP3</span><span class="p">);</span> <span class="c1">// Open file as MP3 type</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">file</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"ERROR: Failed to open MP3 file: "</span> <span class="o">+</span> <span class="n">filepath</span> <span class="o">+</span> <span class="s">". Does it exist?"</span><span class="p">);</span>
        <span class="n">fs</span><span class="p">.</span><span class="n">end</span><span class="p">();</span> <span class="c1">// Ensure file system is unmounted on error</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">file</span><span class="p">.</span><span class="n">setMp3DigitalVol</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span> <span class="c1">// Set volume to maximum (0-255) to ensure audibility</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Playing MP3: "</span> <span class="o">+</span> <span class="n">filepath</span><span class="p">);</span>
    <span class="n">file</span><span class="p">.</span><span class="n">playMp3</span><span class="p">();</span> <span class="c1">// Start playback (this is non-blocking)</span>

    <span class="c1">// Add a delay to allow the MP3 to play.</span>
    <span class="c1">// In a production scenario, you might want a more sophisticated way to check if playback has finished.</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Waiting for MP3 playback to finish (5 seconds)..."</span><span class="p">);</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">5000</span><span class="p">);</span> <span class="c1">// Example: wait 5 seconds for audio to play</span>

    <span class="n">file</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>   <span class="c1">// Close file after playback is initiated</span>
    <span class="n">fs</span><span class="p">.</span><span class="n">end</span><span class="p">();</span>       <span class="c1">// Unmount SD card file system</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"MP3 playback finished."</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Get formatted time string from RTC (從 RTC 獲取格式化的時間字串)</span>
<span class="n">String</span> <span class="nf">getFormattedTime</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">timeinfo</span> <span class="o">=</span> <span class="n">localtime</span><span class="p">(</span><span class="o">&amp;</span><span class="n">currentEpochSeconds</span><span class="p">);</span>
    <span class="n">String</span> <span class="n">timeString</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span>
    <span class="c1">// Format:YYYY-MM-DD HH:MM:SS</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="n">String</span><span class="p">(</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_year</span> <span class="o">+</span> <span class="mi">1900</span><span class="p">);</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="s">"-"</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">((</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_mon</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="n">timeString</span> <span class="o">+=</span> <span class="s">"0"</span><span class="p">;</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="n">String</span><span class="p">(</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_mon</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="s">"-"</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_mday</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="n">timeString</span> <span class="o">+=</span> <span class="s">"0"</span><span class="p">;</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="n">String</span><span class="p">(</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_mday</span><span class="p">);</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="s">" "</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_hour</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="n">timeString</span> <span class="o">+=</span> <span class="s">"0"</span><span class="p">;</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="n">String</span><span class="p">(</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_hour</span><span class="p">);</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="s">":"</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_min</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="n">timeString</span> <span class="o">+=</span> <span class="s">"0"</span><span class="p">;</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="n">String</span><span class="p">(</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_min</span><span class="p">);</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="s">":"</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_sec</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">)</span> <span class="n">timeString</span> <span class="o">+=</span> <span class="s">"0"</span><span class="p">;</span>
    <span class="n">timeString</span> <span class="o">+=</span> <span class="n">String</span><span class="p">(</span><span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_sec</span><span class="p">);</span>
    <span class="k">return</span> <span class="n">timeString</span><span class="p">;</span>
<span class="p">}</span>

</code></pre></div></div>

<h2 id="實作成果">實作成果</h2>

<h3 id="照片">照片</h3>

<p>設備圖<br />
<img src="/assets/photo/Edge-Ai-Class-Project/AI視覺輔助系統/178638.jpg" alt="imag" /></p>

<p>Damo(全)的序列阜輸出結果
<img src="/assets/photo/Edge-Ai-Class-Project/AI視覺輔助系統/螢幕擷取畫面%202025-06-12%20215619.png" alt="imag" /></p>

<h3 id="影片">影片</h3>

<p><strong>小Damo</strong></p>

<p><a href="https://www.youtube.com/watch?v=jzz600KlVgc"><img src="https://img.youtube.com/vi/jzz600KlVgc/0.jpg" alt="IMAGE ALT TEXT HERE" /></a><br />
點擊圖片播放</p>

<p><strong>Damo(全)</strong></p>

<p><a href="https://www.youtube.com/watch?v=7egU_T91SW0"><img src="https://img.youtube.com/vi/7egU_T91SW0/0.jpg" alt="IMAGE ALT TEXT HERE" /></a><br />
點擊圖片播放</p>]]></content><author><name>Li Kai_Huang</name><email>moray.huang@gmail.com</email></author><category term="1131邊緣運算課" /><category term="入門" /><category term="學習" /><category term="blog" /><summary type="html"><![CDATA[這篇文章會講解我邊緣運算的第七個專案 AI 盲人視覺輔助系統]]></summary></entry><entry><title type="html">AI 監視錄影系統</title><link href="http://localhost:4000/blog/AI-Class/project2/" rel="alternate" type="text/html" title="AI 監視錄影系統" /><published>2025-06-07T15:40:00+08:00</published><updated>2025-06-07T15:40:00+08:00</updated><id>http://localhost:4000/blog/AI-Class/edge-ai-class-project2</id><content type="html" xml:base="http://localhost:4000/blog/AI-Class/project2/"><![CDATA[<h1 id="ai-監視錄影系統">AI 監視錄影系統</h1>

<p>本報告旨在介紹一個基於邊緣 AI 技術的輔助回收系統。該系統利用 Realtek AMB82_mini 微控制器作為核心處理單元，整合影像辨識與語音互動功能，旨在實現對回收物品的自動識別與語音指引，從而提升回收效率與正確性。</p>

<ul>
  <li><a href="#ai-監視錄影系統">AI 監視錄影系統</a>
    <ul>
      <li><a href="#功能">功能</a></li>
      <li><a href="#genai程式碼設計流程">GenAI程式碼設計流程</a></li>
      <li><a href="#程式碼產生提示">程式碼產生提示</a></li>
      <li><a href="#程式碼">程式碼</a></li>
      <li><a href="#實作成果">實作成果</a>
        <ul>
          <li><a href="#demo-數據">Demo 數據</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="功能">功能</h2>

<p>1) 每分鐘捕捉影像並傳送至 Gemini Vision (1 分鐘拍攝)</p>

<p>2) 如果回覆文字沒有變化，則不儲存 jpg 和文字如果回應的文字與先前的場景不同，則儲存 jpg 和文字(使用日期+時間作為檔案名稱）</p>

<h2 id="genai程式碼設計流程">GenAI程式碼設計流程</h2>

<pre><code class="language-mermaid">graph TD
    A[開始] --&gt; B[系統初始化];
    B --&gt; C{啟動定時器 - 每分鐘觸發};
    C --&gt; D[定時器觸發];
    D --&gt; E[捕捉影像];
    E --&gt; F[影像數據預處理/壓縮];
    F --&gt; G[發送影像至 Google Gemini Vision];
    G --&gt; H{等待 Gemini 回應};
    H -- 成功回應 --&gt; I[接收 Gemini 回應 - 文字描述];
    I -- 失敗回應 --&gt; P[處理 Gemini 錯誤/重試];
    P --&gt; C;

    I --&gt; J{比較當前文字與先前文字};
    J -- 文字無變化 --&gt; K[不儲存];
    K --&gt; C;

    J -- 文字有變化 --&gt; L[儲存 JPG 影像];
    L --&gt; M[儲存文字描述];
    M --&gt; N[使用日期+時間作為檔名];
    N --&gt; O[完成儲存];
    O --&gt; C;
</code></pre>

<h2 id="程式碼產生提示">程式碼產生提示</h2>
<p><strong>給AI的提示詞</strong>：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>我給你兩份範例代碼請幫我結合 並符合以下要求

1）每分鐘捕捉影像並發送給Gemini Vision（1分鐘拍攝）

2）如果回覆文字沒有變化，則不儲存 jpg 和文字

如果回應的文字與先前的場景不同，則儲存 jpg 和文字 

（使用日期+時間作為檔案名稱）

1.  GenAIVision.ino

2.  CaptureJPG_SDcard.ino
</code></pre></div></div>

<h2 id="程式碼">程式碼</h2>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">"VideoStream.h"</span><span class="cp">
#include</span> <span class="cpf">"AmebaFatFS.h"</span><span class="cp">
#include</span> <span class="cpf">&lt;WiFi.h&gt;</span><span class="cp">
#include</span> <span class="cpf">"GenAI.h"</span><span class="cp">
#include</span> <span class="cpf">"rtc.h"</span><span class="c1">    // Correct library for AmebaPro2 RTC</span><span class="cp">
#include</span> <span class="cpf">&lt;time.h&gt;</span><span class="c1">   // Still needed for struct tm and localtime()</span><span class="cp">
</span>
<span class="c1">// --- Configuration Defines ---</span>
<span class="cp">#define CHANNEL 0
#define CAPTURE_INTERVAL_MS 60000 // 1 minute in milliseconds
</span>
<span class="c1">// --- API Keys and Wi-Fi Credentials (from your provided code) ---</span>
<span class="n">String</span> <span class="n">Gemini_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span> <span class="c1">// Your Gemini API key</span>
<span class="kt">char</span> <span class="n">wifi_ssid</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span><span class="c1">// Your Wi-Fi network SSID</span>
<span class="kt">char</span> <span class="n">wifi_pass</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span><span class="c1">// Your Wi-Fi network password</span>

<span class="c1">// --- RTC Initial Time Settings ---</span>
<span class="c1">// These values will be used to set the RTC initially when the board powers on.</span>
<span class="c1">// Adjust these to your current date and time for accurate timestamps.</span>
<span class="cp">#define INITIAL_YEAR  2024
#define INITIAL_MONTH 5
#define INITIAL_DAY   22
#define INITIAL_HOUR  20
#define INITIAL_MIN   40
#define INITIAL_SEC   0
</span>
<span class="c1">// --- Global Objects and Variables ---</span>
<span class="n">WiFiSSLClient</span> <span class="n">client</span><span class="p">;</span>
<span class="n">GenAI</span> <span class="n">llm</span><span class="p">;</span>

<span class="c1">// Camera settings: 768x768 resolution, optimized for vision models</span>
<span class="n">VideoSetting</span> <span class="nf">config</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="mi">768</span><span class="p">,</span> <span class="n">CAM_FPS</span><span class="p">,</span> <span class="n">VIDEO_JPEG</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>

<span class="kt">uint32_t</span> <span class="n">img_addr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// Pointer to the image data in memory</span>
<span class="kt">uint32_t</span> <span class="n">img_len</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>  <span class="c1">// Length of the image data</span>

<span class="n">AmebaFatFS</span> <span class="n">fs</span><span class="p">;</span> <span class="c1">// File system object for SD card operations</span>
<span class="n">File</span> <span class="n">file</span><span class="p">;</span>     <span class="c1">// File object for reading/writing to SD card</span>

<span class="n">String</span> <span class="n">prompt_msg</span> <span class="o">=</span> <span class="s">"Please describe the image, and if there is a text, please summarize the content"</span><span class="p">;</span>
<span class="n">String</span> <span class="n">previous_gemini_response</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span> <span class="c1">// Stores the last Gemini response for comparison</span>
<span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">last_capture_time</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>  <span class="c1">// Tracks the time of the last image capture</span>

<span class="c1">// --- Function to initialize Wi-Fi connection ---</span>
<span class="kt">void</span> <span class="nf">initWiFi</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Connecting to WiFi..."</span><span class="p">);</span>
  <span class="n">WiFi</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="n">wifi_ssid</span><span class="p">,</span> <span class="n">wifi_pass</span><span class="p">);</span> <span class="c1">// Start Wi-Fi connection</span>

  <span class="kt">uint32_t</span> <span class="n">StartTime</span> <span class="o">=</span> <span class="n">millis</span><span class="p">();</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span> <span class="c1">// Wait a bit before checking again</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"."</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">((</span><span class="n">millis</span><span class="p">()</span> <span class="o">-</span> <span class="n">StartTime</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">15000</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// Timeout after 15 seconds</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">WiFi connection timed out. Please check credentials and try again."</span><span class="p">);</span>
      <span class="c1">// In a real application, you might want to restart or go into a low-power mode here.</span>
      <span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">);</span> <span class="c1">// Halt execution if WiFi fails after timeout</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">WiFi connected!"</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"STA IP address: "</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">localIP</span><span class="p">());</span>
<span class="p">}</span>

<span class="c1">// --- Setup Function: Runs once at startup ---</span>
<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">115200</span><span class="p">);</span> <span class="c1">// Initialize serial communication for debugging</span>

  <span class="c1">// Initialize Wi-Fi</span>
  <span class="n">initWiFi</span><span class="p">();</span>

  <span class="c1">// Initialize RTC and set initial time</span>
  <span class="n">rtc</span><span class="p">.</span><span class="n">Init</span><span class="p">();</span> <span class="c1">// Initialize the RTC module</span>
  <span class="c1">// Set the initial epoch time for the RTC</span>
  <span class="kt">long</span> <span class="kt">long</span> <span class="n">epochTime</span> <span class="o">=</span> <span class="n">rtc</span><span class="p">.</span><span class="n">SetEpoch</span><span class="p">(</span><span class="n">INITIAL_YEAR</span><span class="p">,</span> <span class="n">INITIAL_MONTH</span><span class="p">,</span> <span class="n">INITIAL_DAY</span><span class="p">,</span> <span class="n">INITIAL_HOUR</span><span class="p">,</span> <span class="n">INITIAL_MIN</span><span class="p">,</span> <span class="n">INITIAL_SEC</span><span class="p">);</span>
  <span class="n">rtc</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">epochTime</span><span class="p">);</span> <span class="c1">// Write the set epoch time to the RTC hardware</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"RTC initialized to: "</span><span class="p">);</span>
  <span class="c1">// Print current time from RTC for verification</span>
  <span class="kt">time_t</span> <span class="n">current_rtc_time</span> <span class="o">=</span> <span class="n">rtc</span><span class="p">.</span><span class="n">Read</span><span class="p">();</span> <span class="c1">// Read current time from RTC</span>
  <span class="k">struct</span> <span class="n">tm</span> <span class="o">*</span> <span class="n">timeinfo</span> <span class="o">=</span> <span class="n">localtime</span><span class="p">(</span><span class="o">&amp;</span><span class="n">current_rtc_time</span><span class="p">);</span> <span class="c1">// Convert to local time structure</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">asctime</span><span class="p">(</span><span class="n">timeinfo</span><span class="p">));</span> <span class="c1">// Print formatted time</span>

  <span class="c1">// Configure and initialize the camera</span>
  <span class="n">config</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="c1">// Set camera rotation if needed (0 for no rotation)</span>
  <span class="n">Camera</span><span class="p">.</span><span class="n">configVideoChannel</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">,</span> <span class="n">config</span><span class="p">);</span>
  <span class="n">Camera</span><span class="p">.</span><span class="n">videoInit</span><span class="p">();</span>
  <span class="n">Camera</span><span class="p">.</span><span class="n">channelBegin</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">);</span>
  <span class="n">Camera</span><span class="p">.</span><span class="n">printInfo</span><span class="p">();</span> <span class="c1">// Print camera information to serial</span>

  <span class="c1">// Initialize SD card file system</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">fs</span><span class="p">.</span><span class="n">begin</span><span class="p">())</span> <span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Failed to initialize SD card! Please check connection and format."</span><span class="p">);</span>
    <span class="c1">// Handle SD card initialization failure (e.g., halt, retry)</span>
    <span class="k">while</span> <span class="p">(</span><span class="nb">true</span><span class="p">);</span> <span class="c1">// Halt execution if SD card fails</span>
  <span class="p">}</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"SD card initialized successfully."</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"SD card root path: "</span><span class="p">);</span>
  <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">fs</span><span class="p">.</span><span class="n">getRootPath</span><span class="p">());</span> <span class="c1">// Print the actual root path for debugging</span>

  <span class="c1">// Set initial capture time to ensure an immediate capture on startup</span>
  <span class="c1">// Subtracting CAPTURE_INTERVAL_MS makes the first capture happen immediately in loop()</span>
  <span class="n">last_capture_time</span> <span class="o">=</span> <span class="n">millis</span><span class="p">()</span> <span class="o">-</span> <span class="n">CAPTURE_INTERVAL_MS</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">// --- Loop Function: Runs repeatedly ---</span>
<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span> <span class="p">{</span>
  <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">current_time_millis</span> <span class="o">=</span> <span class="n">millis</span><span class="p">();</span> <span class="c1">// Get current uptime in milliseconds</span>

  <span class="c1">// Check if it's time to capture a new image (every minute)</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">current_time_millis</span> <span class="o">-</span> <span class="n">last_capture_time</span> <span class="o">&gt;=</span> <span class="n">CAPTURE_INTERVAL_MS</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">last_capture_time</span> <span class="o">=</span> <span class="n">current_time_millis</span><span class="p">;</span> <span class="c1">// Update the last capture time to now</span>

    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">--- Capturing Image ---"</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">getImage</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_addr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_len</span><span class="p">);</span> <span class="c1">// Capture image data into memory</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">img_len</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Failed to capture image (length is 0). Skipping Gemini Vision."</span><span class="p">);</span>
      <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> <span class="c1">// Wait a bit before trying again to avoid rapid failures</span>
      <span class="k">return</span><span class="p">;</span>      <span class="c1">// Skip the rest of the loop for this iteration</span>
    <span class="p">}</span>

    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Sending image to Gemini Vision..."</span><span class="p">);</span>
    <span class="c1">// Call Gemini Vision API with the captured image data and prompt</span>
    <span class="n">String</span> <span class="n">current_gemini_response</span> <span class="o">=</span> <span class="n">llm</span><span class="p">.</span><span class="n">geminivision</span><span class="p">(</span><span class="n">Gemini_key</span><span class="p">,</span> <span class="s">"gemini-2.0-flash"</span><span class="p">,</span> <span class="n">prompt_msg</span><span class="p">,</span> <span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">,</span> <span class="n">client</span><span class="p">);</span>
    
    <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Gemini Response: "</span><span class="p">);</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">current_gemini_response</span><span class="p">);</span>

    <span class="c1">// Compare the current Gemini response with the previous one</span>
    <span class="c1">// Also ensure the current response is not empty before storing</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">current_gemini_response</span> <span class="o">!=</span> <span class="n">previous_gemini_response</span> <span class="o">&amp;&amp;</span> <span class="n">current_gemini_response</span><span class="p">.</span><span class="n">length</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Gemini response is different from previous or not empty. Storing image and text."</span><span class="p">);</span>

      <span class="c1">// Get current date and time from RTC for filename</span>
      <span class="kt">time_t</span> <span class="n">t</span> <span class="o">=</span> <span class="n">rtc</span><span class="p">.</span><span class="n">Read</span><span class="p">();</span> <span class="c1">// Get current epoch time (Unix timestamp) from the RTC</span>
      <span class="k">struct</span> <span class="n">tm</span> <span class="o">*</span> <span class="n">timeinfo</span> <span class="o">=</span> <span class="n">localtime</span><span class="p">(</span><span class="o">&amp;</span><span class="n">t</span><span class="p">);</span> <span class="c1">// Convert epoch time to a broken-down time structure</span>

      <span class="c1">// Increased buffer size to 64 to prevent sprintf overflow warnings</span>
      <span class="kt">char</span> <span class="n">filename_date_time</span><span class="p">[</span><span class="mi">30</span><span class="p">];</span> <span class="c1">// Buffer for just the date_time part of the filename</span>
      <span class="kt">char</span> <span class="n">full_filename_buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span> <span class="c1">// Larger buffer for the full path</span>

      <span class="c1">// Create the date_time part of the filename: YYYYMMDD_HHMMSS</span>
      <span class="n">sprintf</span><span class="p">(</span><span class="n">filename_date_time</span><span class="p">,</span> <span class="s">"%04d%02d%02d_%02d%02d%02d"</span><span class="p">,</span> 
              <span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_year</span> <span class="o">+</span> <span class="mi">1900</span><span class="p">,</span>  <span class="c1">// Add 1900 to get full year</span>
              <span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_mon</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span>      <span class="c1">// Add 1 to get month (1-12)</span>
              <span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_mday</span><span class="p">,</span>         <span class="c1">// Day of the month</span>
              <span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_hour</span><span class="p">,</span>         <span class="c1">// Hour (0-23)</span>
              <span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_min</span><span class="p">,</span>          <span class="c1">// Minute (0-59)</span>
              <span class="n">timeinfo</span><span class="o">-&gt;</span><span class="n">tm_sec</span><span class="p">);</span>         <span class="c1">// Second (0-59)</span>

      <span class="c1">// Get the root path from the SD card file system</span>
      <span class="n">String</span> <span class="n">rootPath</span> <span class="o">=</span> <span class="n">fs</span><span class="p">.</span><span class="n">getRootPath</span><span class="p">();</span>
      <span class="c1">// Ensure rootPath does not end with a slash if it's not empty, to avoid double slashes</span>
      <span class="k">if</span> <span class="p">(</span><span class="n">rootPath</span><span class="p">.</span><span class="n">length</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">rootPath</span><span class="p">.</span><span class="n">endsWith</span><span class="p">(</span><span class="s">"/"</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">rootPath</span> <span class="o">!=</span> <span class="s">"/"</span><span class="p">)</span> <span class="p">{</span>
          <span class="n">rootPath</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="n">rootPath</span><span class="p">.</span><span class="n">length</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
      <span class="p">}</span>

      <span class="c1">// Construct the full image filename: &lt;rootPath&gt;/YYYYMMDD_HHMMSS.jpg</span>
      <span class="n">sprintf</span><span class="p">(</span><span class="n">full_filename_buffer</span><span class="p">,</span> <span class="s">"%s/%s.jpg"</span><span class="p">,</span> <span class="n">rootPath</span><span class="p">.</span><span class="n">c_str</span><span class="p">(),</span> <span class="n">filename_date_time</span><span class="p">);</span>
      <span class="n">String</span> <span class="n">image_filename</span> <span class="o">=</span> <span class="n">String</span><span class="p">(</span><span class="n">full_filename_buffer</span><span class="p">);</span>

      <span class="c1">// Construct the full text filename: &lt;rootPath&gt;/YYYYMMDD_HHMMSS.txt</span>
      <span class="n">sprintf</span><span class="p">(</span><span class="n">full_filename_buffer</span><span class="p">,</span> <span class="s">"%s/%s.txt"</span><span class="p">,</span> <span class="n">rootPath</span><span class="p">.</span><span class="n">c_str</span><span class="p">(),</span> <span class="n">filename_date_time</span><span class="p">);</span>
      <span class="n">String</span> <span class="n">text_filename</span> <span class="o">=</span> <span class="n">String</span><span class="p">(</span><span class="n">full_filename_buffer</span><span class="p">);</span>

      <span class="c1">// --- Store Image to SD Card ---</span>
      <span class="c1">// Open file in write mode using FA_WRITE (correct for AmebaFatFS)</span>
      <span class="n">file</span> <span class="o">=</span> <span class="n">fs</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="n">image_filename</span><span class="p">,</span> <span class="n">FA_WRITE</span><span class="p">);</span> 
      <span class="k">if</span> <span class="p">(</span><span class="n">file</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">file</span><span class="p">.</span><span class="n">write</span><span class="p">((</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">);</span> <span class="c1">// Write image data from memory to SD card</span>
        <span class="n">file</span><span class="p">.</span><span class="n">close</span><span class="p">();</span> <span class="c1">// Close the file to save changes</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Image stored as: "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">image_filename</span><span class="p">);</span>
      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Error: Could not open image file for writing: "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">image_filename</span><span class="p">);</span>
      <span class="p">}</span>

      <span class="c1">// --- Store Text to SD Card ---</span>
      <span class="c1">// Open file in write mode using FA_WRITE</span>
      <span class="n">file</span> <span class="o">=</span> <span class="n">fs</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="n">text_filename</span><span class="p">,</span> <span class="n">FA_WRITE</span><span class="p">);</span> 
      <span class="k">if</span> <span class="p">(</span><span class="n">file</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">file</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="n">current_gemini_response</span><span class="p">);</span> <span class="c1">// Write the Gemini response text to SD card</span>
        <span class="n">file</span><span class="p">.</span><span class="n">close</span><span class="p">();</span> <span class="c1">// Close the file to save changes</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Text stored as: "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">text_filename</span><span class="p">);</span>
      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Error: Could not open text file for writing: "</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">text_filename</span><span class="p">);</span>
      <span class="p">}</span>
      
      <span class="c1">// Update the previous response for the next comparison</span>
      <span class="n">previous_gemini_response</span> <span class="o">=</span> <span class="n">current_gemini_response</span><span class="p">;</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Gemini response is the same as previous or empty. Not storing image or text."</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="n">delay</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span> <span class="c1">// Small delay to prevent busy-waiting and allow other tasks to run</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="實作成果">實作成果</h2>

<h3 id="demo-數據">Demo 數據</h3>

<p><img src="/assets/photo/Edge-Ai-Class-Project/AI監視器/image.png" alt="imag" /></p>

<p>以下是檔案的詳細資料</p>

<p><img src="/assets/photo/Edge-Ai-Class-Project/AI監視器/20250522_210653.jpg" alt="imag" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>20250522_210653.txt

The image shows a computer screen displaying a webpage for Anaconda, a Python distribution. The webpage is primarily in Chinese, with some English words such as "Anaconda" and "Install Anaconda on Ubuntu".  The page seems to be showing instructions or information regarding installation and other details related to Anaconda. The computer is in a computer lab setting, with other computers visible in the background.  Several people are partially visible in the background, seemingly working on other computers.
</code></pre></div></div>

<p><img src="/assets/photo/Edge-Ai-Class-Project/AI監視器/20250522_210755.jpg" alt="imag" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>20250522_210755.txt

Here's a description of the image:
The image shows a computer lab or internet cafe setting. The focus is on a  large computer monitor in the foreground, displaying a webpage that is   partially visible and blurry.  The webpage seems to contain text and possibly     an image or advertisement.  Surrounding this main monitor are several other     computer monitors, arranged in rows. The monitors are relatively small compared     to the one in the foreground, and their screens are partially obscured. The     room itself appears to be a typical office or classroom setting, with a white   ceiling, fluorescent lighting, and what look like cubicle partitions partially    visible behind the computers.  A keyboard is visible in the bottom-left corner,    partially obscuring the edge of a laptop.  The overall lighting is bright but  somewhat washed out, likely due to the fluorescent lights.
The text on the main monitor is unclear and unreadable due to blurriness and    distance.  Therefore, no summary of the webpage's content can be provided.
</code></pre></div></div>

<p><img src="/assets/photo/Edge-Ai-Class-Project/AI監視器/20250522_210851.jpg" alt="imag" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>20250522_210851.jpg

The image shows a section of a white ceiling.  There is a long fluorescent light fixture mounted on the ceiling, as well as what appears to be a portion of an air conditioning vent or exhaust fan in the upper right corner. There is no text visible in the image.
</code></pre></div></div>]]></content><author><name>Li Kai_Huang</name><email>moray.huang@gmail.com</email></author><category term="1131邊緣運算課" /><category term="入門" /><category term="學習" /><category term="blog" /><summary type="html"><![CDATA[這篇文章會講解我邊緣運算的第二個專案 AI 監視錄影系統]]></summary></entry><entry><title type="html">AI 情緒感知音樂播放器</title><link href="http://localhost:4000/blog/AI-Class/project5/" rel="alternate" type="text/html" title="AI 情緒感知音樂播放器" /><published>2025-06-07T15:40:00+08:00</published><updated>2025-06-07T15:40:00+08:00</updated><id>http://localhost:4000/blog/AI-Class/edge-ai-class-project5</id><content type="html" xml:base="http://localhost:4000/blog/AI-Class/project5/"><![CDATA[<h1 id="ai-情緒感知音樂播放器">AI 情緒感知音樂播放器</h1>

<p>本報告旨在介紹一款創新的AI 情緒感知音樂播放器。該系統旨在透過人工智慧分析用戶當前的情緒狀態，並據此智能推薦並播放儲存在本地 SD 卡中的相應音樂，為使用者提供個性化的音樂聆聽體驗。其核心機制是捕捉用戶影像並傳送至 Google Gemini 進行情緒偵測，隨後 AI 會根據偵測到的情緒，從預設的歌曲清單中推薦最符合當前情感的歌曲名稱。</p>

<ul>
  <li><a href="#ai-情緒感知音樂播放器">AI 情緒感知音樂播放器</a>
    <ul>
      <li><a href="#功能">功能</a></li>
      <li><a href="#genai程式碼設計流程">GenAI程式碼設計流程</a></li>
      <li><a href="#程式碼產生提示">程式碼產生提示</a></li>
      <li><a href="#程式碼">程式碼</a>
        <ul>
          <li><a href="#重點">重點</a></li>
        </ul>
      </li>
      <li><a href="#實作成果">實作成果</a>
        <ul>
          <li><a href="#照片">照片</a></li>
          <li><a href="#影片">影片</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="功能">功能</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 抓取影像傳送給Gemini偵測情緒然後要求推薦儲存在SD卡中的歌曲名稱（提示字輸入幾個已經   存在SD卡的歌曲檔名，讓AI去推薦）

2. 播放MP3文件
</code></pre></div></div>

<h2 id="genai程式碼設計流程">GenAI程式碼設計流程</h2>

<pre><code class="language-mermaid">graph TD
    A[開始] --&gt; B(系統啟動);
    B --&gt; C[捕捉影像];
    C --&gt; D[影像數據];
    D --&gt; E[發送影像與歌曲列表至 Google Gemini];
    E --&gt; F{Gemini 偵測情緒並推薦歌曲名稱};
    F -- 返回推薦歌曲名稱 --&gt; G[接收推薦歌曲名稱];
    G --&gt; H[從 SD 卡讀取推薦的 MP3 檔案];
    H --&gt; I[MP3 音訊數據];
    I --&gt; J[播放 MP3 音樂];
    J --&gt; K[結束];
</code></pre>

<p><strong>流程圖說明：</strong></p>

<ul>
  <li><strong>開始 (Start)：</strong> 系統啟動流程。</li>
  <li><strong>系統啟動 (System Startup)：</strong> 初始化所有硬體和軟體模組。</li>
  <li><strong>捕捉影像 (Capture Image)：</strong> 攝影機模組捕捉當前用戶的影像。</li>
  <li><strong>影像數據 (Image Data)：</strong> 獲取的圖像數據。</li>
  <li><strong>發送影像與歌曲列表至 Google Gemini (Send Image &amp; Song List to Google Gemini)：</strong> MCU 將圖像數據連同預存的歌曲名稱列表一同發送給 Google Gemini API。</li>
  <li><strong>Gemini 偵測情緒並推薦歌曲名稱 (Gemini Detects Emotion &amp; Recommends Song Name)：</strong> Google Gemini 分析圖像中的情緒，並根據提示字中的歌曲列表推薦一首匹配的歌曲名稱。</li>
  <li><strong>接收推薦歌曲名稱 (Receive Recommended Song Name)：</strong> MCU 接收 Gemini 返回的推薦歌曲名稱。</li>
  <li><strong>從 SD 卡讀取推薦的 MP3 檔案 (Read Recommended MP3 File from SD Card)：</strong> MCU 根據推薦的歌曲名稱，從本地 SD 卡中找到並讀取對應的 MP3 檔案。</li>
  <li><strong>MP3 音訊數據 (MP3 Audio Data)：</strong> 從 SD 卡讀取到的 MP3 音訊數據。</li>
  <li><strong>播放 MP3 音樂 (Play MP3 Music)：</strong> MCU 透過音訊輸出模組播放 MP3 音樂。</li>
  <li><strong>結束 (End)：</strong> 一次情緒感知音樂播放流程完成。</li>
</ul>

<h2 id="程式碼產生提示">程式碼產生提示</h2>
<p><img src="photo/AI情緒感知音樂播放器/螢幕擷取畫面%202025-06-14%20012049.png" alt="img" /></p>

<h2 id="程式碼">程式碼</h2>

<h3 id="重點">重點</h3>
<p>&lt;<strong>提示字:</strong> <em><code class="language-plaintext highlighter-rouge">"Analyze the emotion (happy, angry, sad, or joyful) of the person in the image. Based on the detected emotion, recommend a suitable song filename from the following list. Respond in the exact format: 'Emotion: [emotion], Song: [filename.mp3]'. Emotion mapping: Happy: APT.mp3. Angry: BirdsOfAFeather.mp3. Sad: ThePowerOfGoodBye.mp3. Joyful: AstroBunny.mp3. Other songs available: gTTS.mp3, IBelieve.mp3, JarOfLove.mp3, LoversMisses.mp3, Stumblin_In.mp3, YUNGBLUD.mp3."</code></em>&gt;</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 設定您的 WiFi 網路資訊</span>
<span class="kt">char</span> <span class="n">wifi_ssid</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span> <span class="c1">// 您的 WiFi 名稱 (SSID)</span>
<span class="kt">char</span> <span class="n">wifi_pass</span><span class="p">[]</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span> <span class="c1">// 您的 WiFi 密碼</span>
<span class="c1">// 設定您的 Gemini API Key</span>
<span class="n">String</span> <span class="n">Gemini_key</span> <span class="o">=</span> <span class="s">""</span><span class="p">;</span> <span class="c1">// 請在此處替換為您的 Gemini API Key</span>

<span class="cp">#include</span> <span class="cpf">&lt;WiFi.h&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;WiFiUdp.h&gt;</span><span class="cp">
#include</span> <span class="cpf">"GenAI.h"</span><span class="cp">
#include</span> <span class="cpf">"VideoStream.h"</span><span class="cp">
#include</span> <span class="cpf">"SPI.h"</span><span class="cp">
#include</span> <span class="cpf">"AmebaILI9341.h"</span><span class="cp">
#include</span> <span class="cpf">"TJpg_Decoder.h"</span><span class="c1"> // Include the jpeg decoder library</span><span class="cp">
#include</span> <span class="cpf">"AmebaFatFS.h"</span><span class="cp">
</span>
<span class="n">WiFiSSLClient</span> <span class="n">client</span><span class="p">;</span>
<span class="n">GenAI</span> <span class="n">llm</span><span class="p">;</span> <span class="c1">// 用於 Gemini Vision API</span>
<span class="n">GenAI</span> <span class="n">tts</span><span class="p">;</span> <span class="c1">// 用於 Google Text-to-Speech API</span>

<span class="n">AmebaFatFS</span> <span class="n">fs</span><span class="p">;</span> <span class="c1">// 用於 SD 卡操作</span>

<span class="n">VideoSetting</span> <span class="nf">config</span><span class="p">(</span><span class="mi">768</span><span class="p">,</span> <span class="mi">768</span><span class="p">,</span> <span class="n">CAM_FPS</span><span class="p">,</span> <span class="n">VIDEO_JPEG</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span> <span class="c1">// 預設 768x768 解析度</span>
<span class="cp">#define CHANNEL 0
</span>
<span class="kt">uint32_t</span> <span class="n">img_addr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">uint32_t</span> <span class="n">img_len</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">buttonPin</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// 觸發拍照的按鈕引腳 (通常是 D1)</span>
<span class="c1">// #define LED_B PC_5 // 板載藍色 LED 引腳 (此行已移除，因為 LED_B 已在核心庫中定義)</span>

<span class="c1">// 提示詞 (Prompt): 要求 AI 回覆情緒和歌曲名，並指定明確格式</span>
<span class="n">String</span> <span class="n">prompt_msg</span> <span class="o">=</span> <span class="s">"Analyze the emotion (happy, angry, sad, or joyful) of the person in the image. Based on the detected emotion, recommend a suitable song filename from the following list. Respond in the exact format: 'Emotion: [emotion], Song: [filename.mp3]'. Emotion mapping: Happy: APT.mp3. Angry: BirdsOfAFeather.mp3. Sad: ThePowerOfGoodBye.mp3. Joyful: AstroBunny.mp3. Other songs available: gTTS.mp3, IBelieve.mp3, JarOfLove.mp3, LoversMisses.mp3, Stumblin_In.mp3, YUNGBLUD.mp3."</span><span class="p">;</span>

<span class="c1">// 定義歌曲列表，用於驗證和提取 Gemini 的回覆</span>
<span class="k">const</span> <span class="n">String</span> <span class="n">songList</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"APT.mp3"</span><span class="p">,</span> <span class="s">"AstroBunny.mp3"</span><span class="p">,</span> <span class="s">"BirdsOfAFeather.mp3"</span><span class="p">,</span> <span class="s">"gTTS.mp3"</span><span class="p">,</span>
    <span class="s">"IBelieve.mp3"</span><span class="p">,</span> <span class="s">"JarOfLove.mp3"</span><span class="p">,</span> <span class="s">"LoversMisses.mp3"</span><span class="p">,</span> <span class="s">"Stumblin_In.mp3"</span><span class="p">,</span>
    <span class="s">"ThePowerOfGoodBye.mp3"</span><span class="p">,</span> <span class="s">"YUNGBLUD.mp3"</span> <span class="c1">// 已修正拼寫錯誤</span>
<span class="p">};</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">numSongs</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">songList</span><span class="p">)</span> <span class="o">/</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">songList</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>


<span class="c1">// TFT 顯示器引腳定義</span>
<span class="cp">#define TFT_RESET 5
#define TFT_DC 4
#define TFT_CS SPI_SS // CS 引腳通常連接到 SPI_SS
</span>
<span class="n">AmebaILI9341</span> <span class="n">tft</span> <span class="o">=</span> <span class="n">AmebaILI9341</span><span class="p">(</span><span class="n">TFT_CS</span><span class="p">,</span> <span class="n">TFT_DC</span><span class="p">,</span> <span class="n">TFT_RESET</span><span class="p">);</span>
<span class="cp">#define ILI9341_SPI_FREQUENCY 20000000 // TFT SPI 通訊頻率
</span>
<span class="c1">// JPEG 圖片解碼回調函數 (用於 TFT 顯示)</span>
<span class="c1">// 修正 'h' 參數類型為 uint16_t 以匹配 SketchCallback 類型</span>
<span class="n">bool</span> <span class="nf">tft_output</span><span class="p">(</span><span class="kt">int16_t</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int16_t</span> <span class="n">y</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">w</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="n">h</span><span class="p">,</span> <span class="kt">uint16_t</span> <span class="o">*</span><span class="n">bitmap</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">drawBitmap</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">,</span> <span class="n">bitmap</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span> <span class="c1">// Return 1 to decode next block</span>
<span class="p">}</span>

<span class="c1">// 初始化 WiFi 連線</span>
<span class="kt">void</span> <span class="nf">initWiFi</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">Connecting to WiFi..."</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 嘗試連線兩次</span>
        <span class="n">WiFi</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="n">wifi_ssid</span><span class="p">,</span> <span class="n">wifi_pass</span><span class="p">);</span>
        <span class="kt">uint32_t</span> <span class="n">StartTime</span> <span class="o">=</span> <span class="n">millis</span><span class="p">();</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"."</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">((</span><span class="n">StartTime</span> <span class="o">+</span> <span class="mi">10000</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">millis</span><span class="p">())</span> <span class="p">{</span> <span class="c1">// 等待 10 秒超時</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">==</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">WiFi connected."</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"STA IP address: "</span><span class="p">);</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">localIP</span><span class="p">());</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">WiFi connection failed, retrying..."</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">WiFi</span><span class="p">.</span><span class="n">status</span><span class="p">()</span> <span class="o">!=</span> <span class="n">WL_CONNECTED</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Failed to connect to WiFi after multiple attempts."</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"WiFi Fail!"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// 初始化 TFT 顯示器</span>
<span class="kt">void</span> <span class="nf">init_tft</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// 旋轉方向，根據您的顯示器調整</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span> <span class="c1">// 清除螢幕</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// 設定游標位置</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setForeground</span><span class="p">(</span><span class="n">ILI9341_GREEN</span><span class="p">);</span> <span class="c1">// 設定文字顏色</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setFontSize</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// 設定字體大小</span>
<span class="p">}</span>

<span class="c1">// SD 卡 MP3 播放函數</span>
<span class="kt">void</span> <span class="nf">sdPlayMP3</span><span class="p">(</span><span class="n">String</span> <span class="n">filename</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Attempting to open and play: "</span><span class="p">);</span> 
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">filename</span><span class="p">);</span>

    <span class="c1">// 構建完整的檔案路徑 (例如: "0:/mp3/APT.mp3" 或 "0:/tts_song_name.mp3")</span>
    <span class="n">String</span> <span class="n">filepath</span> <span class="o">=</span> <span class="n">String</span><span class="p">(</span><span class="n">fs</span><span class="p">.</span><span class="n">getRootPath</span><span class="p">())</span> <span class="o">+</span> <span class="n">filename</span><span class="p">;</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Full path: "</span><span class="p">);</span> <span class="c1">// 顯示完整的檔案路徑</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">filepath</span><span class="p">);</span>

    <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="n">fs</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="n">MP3</span><span class="p">);</span> <span class="c1">// 打開 MP3 檔案，這裡修正為帶 MP3 模式</span>

    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">file</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"[ERROR] Failed to open MP3: "</span><span class="p">);</span> <span class="c1">// 錯誤訊息</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">filepath</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Error: Song not found!"</span><span class="p">);</span> 
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Successfully opened MP3 file."</span><span class="p">);</span> <span class="c1">// 成功打開檔案</span>
    <span class="n">file</span><span class="p">.</span><span class="n">setMp3DigitalVol</span><span class="p">(</span><span class="mi">175</span><span class="p">);</span> <span class="c1">// 設定播放音量 (0-255)</span>
    <span class="n">file</span><span class="p">.</span><span class="n">playMp3</span><span class="p">();</span> <span class="c1">// 播放 MP3</span>

    <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">playStartTime</span> <span class="o">=</span> <span class="n">millis</span><span class="p">();</span>
    <span class="c1">// 簡單地等待 10 秒讓歌曲播放，實際應用中可根據 MP3 庫的 API 檢查播放狀態</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">millis</span><span class="p">()</span> <span class="o">-</span> <span class="n">playStartTime</span> <span class="o">&lt;</span> <span class="mi">10000</span><span class="p">)</span> <span class="p">{</span> 
        <span class="n">delay</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Playback finished."</span><span class="p">);</span> <span class="c1">// 播放結束日誌</span>
    <span class="n">file</span><span class="p">.</span><span class="n">close</span><span class="p">();</span> <span class="c1">// 關閉檔案</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">115200</span><span class="p">);</span> <span class="c1">// 初始化序列埠通訊</span>

    <span class="n">SPI</span><span class="p">.</span><span class="n">setDefaultFrequency</span><span class="p">(</span><span class="n">ILI9341_SPI_FREQUENCY</span><span class="p">);</span> <span class="c1">// 設定 SPI 頻率</span>
    <span class="n">initWiFi</span><span class="p">();</span> <span class="c1">// 連接 WiFi</span>

    <span class="c1">// 相機初始化設定 (這些函數可能會在相機未連接或故障時導致程式卡住)</span>
    <span class="n">config</span><span class="p">.</span><span class="n">setRotation</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">configVideoChannel</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">,</span> <span class="n">config</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">videoInit</span><span class="p">();</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">channelBegin</span><span class="p">(</span><span class="n">CHANNEL</span><span class="p">);</span>
    <span class="n">Camera</span><span class="p">.</span><span class="n">printInfo</span><span class="p">();</span> <span class="c1">// 印出相機資訊，有助於調試</span>
    
    <span class="n">pinMode</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">,</span> <span class="n">INPUT</span><span class="p">);</span> <span class="c1">// 設定按鈕引腳為輸入模式 (依您的要求)</span>
    <span class="n">pinMode</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">OUTPUT</span><span class="p">);</span> <span class="c1">// 設定板載 LED 引腳為輸出模式</span>

    <span class="n">init_tft</span><span class="p">();</span> <span class="c1">// 初始化 TFT 顯示器</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Music Player"</span><span class="p">);</span> <span class="c1">// TFT 顯示標題</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">40</span><span class="p">);</span> <span class="c1">// 移到下一行</span>
    <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Press button to scan"</span><span class="p">);</span> <span class="c1">// 初始提示，只顯示一次</span>

    <span class="n">TJpgDec</span><span class="p">.</span><span class="n">setJpgScale</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span> <span class="c1">// JPEG 解碼比例</span>
    <span class="n">TJpgDec</span><span class="p">.</span><span class="n">setCallback</span><span class="p">(</span><span class="n">tft_output</span><span class="p">);</span> <span class="c1">// 設定 JPEG 解碼回調函數</span>

    <span class="n">fs</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span> <span class="c1">// 初始化 SD 卡檔案系統 (僅在 setup() 中調用一次)</span>
    <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"SD Card initialized."</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// 檢測按鈕是否被按下 (高電位觸發，依您的要求)</span>
    <span class="k">if</span> <span class="p">((</span><span class="n">digitalRead</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">))</span> <span class="o">==</span> <span class="n">HIGH</span><span class="p">)</span> <span class="p">{</span> 
        <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span> <span class="c1">// 清除螢幕</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Capturing..."</span><span class="p">);</span> <span class="c1">// TFT 顯示正在捕捉</span>
        
        <span class="c1">// LED 閃爍提示正在捕捉</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">count</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">;</span> <span class="n">count</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">HIGH</span><span class="p">);</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
            <span class="n">digitalWrite</span><span class="p">(</span><span class="n">LED_B</span><span class="p">,</span> <span class="n">LOW</span><span class="p">);</span>
            <span class="n">delay</span><span class="p">(</span><span class="mi">500</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">// 捕捉影像</span>
        <span class="n">Camera</span><span class="p">.</span><span class="n">getImage</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_addr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">img_len</span><span class="p">);</span>    

        <span class="c1">// 解碼並顯示影像到 TFT</span>
        <span class="n">TJpgDec</span><span class="p">.</span><span class="n">getJpgSize</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">);</span>
        <span class="n">TJpgDec</span><span class="p">.</span><span class="n">drawJpg</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">uint8_t</span> <span class="o">*</span><span class="p">)</span><span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">);</span>

        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">320</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span> <span class="c1">// 將游標移到圖片下方</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Analyzing..."</span><span class="p">);</span> <span class="c1">// TFT 顯示正在分析</span>

        <span class="c1">// 調用 Gemini Vision API 進行情緒分析和歌曲推薦</span>
        <span class="n">String</span> <span class="n">gemini_response</span> <span class="o">=</span> <span class="n">llm</span><span class="p">.</span><span class="n">geminivision</span><span class="p">(</span><span class="n">Gemini_key</span><span class="p">,</span> <span class="s">"gemini-2.0-flash"</span><span class="p">,</span> <span class="n">prompt_msg</span><span class="p">,</span> <span class="n">img_addr</span><span class="p">,</span> <span class="n">img_len</span><span class="p">,</span> <span class="n">client</span><span class="p">);</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">print</span><span class="p">(</span><span class="s">"Gemini Response (Raw): "</span><span class="p">);</span> <span class="c1">// 序列埠顯示 Gemini 原始回覆</span>
        <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">gemini_response</span><span class="p">);</span>

        <span class="c1">// --- 解析邏輯：從 Gemini 回覆中提取情緒和歌曲檔案名 ---</span>
        <span class="n">String</span> <span class="n">detectedEmotion</span> <span class="o">=</span> <span class="s">"Unknown"</span><span class="p">;</span> <span class="c1">// 預設情緒</span>
        <span class="n">String</span> <span class="n">recommendedSongFilename</span> <span class="o">=</span> <span class="s">"JarOfLove.mp3"</span><span class="p">;</span> <span class="c1">// 預設歌曲</span>

        <span class="n">String</span> <span class="n">rawGeminiResponse</span> <span class="o">=</span> <span class="n">gemini_response</span><span class="p">;</span>
        <span class="n">rawGeminiResponse</span><span class="p">.</span><span class="n">trim</span><span class="p">();</span> <span class="c1">// 移除前後空白</span>

        <span class="c1">// 尋找情緒關鍵字</span>
        <span class="kt">int</span> <span class="n">emotionStart</span> <span class="o">=</span> <span class="n">rawGeminiResponse</span><span class="p">.</span><span class="n">indexOf</span><span class="p">(</span><span class="s">"Emotion: "</span><span class="p">);</span>
        <span class="kt">int</span> <span class="n">songStart</span> <span class="o">=</span> <span class="n">rawGeminiResponse</span><span class="p">.</span><span class="n">indexOf</span><span class="p">(</span><span class="s">"Song: "</span><span class="p">);</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">emotionStart</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">songStart</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// 提取情緒詞</span>
            <span class="kt">int</span> <span class="n">emotionValueStart</span> <span class="o">=</span> <span class="n">emotionStart</span> <span class="o">+</span> <span class="n">String</span><span class="p">(</span><span class="s">"Emotion: "</span><span class="p">).</span><span class="n">length</span><span class="p">();</span>
            <span class="kt">int</span> <span class="n">emotionValueEnd</span> <span class="o">=</span> <span class="n">rawGeminiResponse</span><span class="p">.</span><span class="n">indexOf</span><span class="p">(</span><span class="s">","</span><span class="p">,</span> <span class="n">emotionValueStart</span><span class="p">);</span> <span class="c1">// 尋找逗號作為分隔符</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">emotionValueEnd</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">emotionValueEnd</span> <span class="o">&gt;</span> <span class="n">emotionValueStart</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">detectedEmotion</span> <span class="o">=</span> <span class="n">rawGeminiResponse</span><span class="p">.</span><span class="n">substring</span><span class="p">(</span><span class="n">emotionValueStart</span><span class="p">,</span> <span class="n">emotionValueEnd</span><span class="p">);</span>
                <span class="n">detectedEmotion</span><span class="p">.</span><span class="n">trim</span><span class="p">();</span>
            <span class="p">}</span>

            <span class="c1">// 提取歌曲檔案名</span>
            <span class="kt">int</span> <span class="n">songValueStart</span> <span class="o">=</span> <span class="n">songStart</span> <span class="o">+</span> <span class="n">String</span><span class="p">(</span><span class="s">"Song: "</span><span class="p">).</span><span class="n">length</span><span class="p">();</span>
            <span class="n">String</span> <span class="n">extractedSong</span> <span class="o">=</span> <span class="n">rawGeminiResponse</span><span class="p">.</span><span class="n">substring</span><span class="p">(</span><span class="n">songValueStart</span><span class="p">);</span>
            <span class="n">extractedSong</span><span class="p">.</span><span class="n">trim</span><span class="p">();</span>

            <span class="c1">// 驗證提取出的歌曲名是否在我們的列表中</span>
            <span class="n">bool</span> <span class="n">songFoundInList</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">numSongs</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">String</span> <span class="n">lowerCaseExtractedSong</span> <span class="o">=</span> <span class="n">extractedSong</span><span class="p">;</span>
                <span class="n">lowerCaseExtractedSong</span><span class="p">.</span><span class="n">toLowerCase</span><span class="p">();</span>
                <span class="n">String</span> <span class="n">lowerCaseSongName</span> <span class="o">=</span> <span class="n">songList</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="n">lowerCaseSongName</span><span class="p">.</span><span class="n">toLowerCase</span><span class="p">();</span>

                <span class="k">if</span> <span class="p">(</span><span class="n">lowerCaseExtractedSong</span><span class="p">.</span><span class="n">indexOf</span><span class="p">(</span><span class="n">lowerCaseSongName</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">recommendedSongFilename</span> <span class="o">=</span> <span class="n">songList</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="c1">// 使用列表中的正確大小寫名稱</span>
                    <span class="n">songFoundInList</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">songFoundInList</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"[WARNING] Extracted song not in list. Using default: JarOfLove.mp3"</span><span class="p">);</span>
                <span class="n">recommendedSongFilename</span> <span class="o">=</span> <span class="s">"JarOfLove.mp3"</span><span class="p">;</span> <span class="c1">// 如果提取的歌曲不在列表中，則使用預設</span>
            <span class="p">}</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"[WARNING] Gemini response format not as expected. Using default song and emotion."</span><span class="p">);</span>
            <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"AI Response Error!"</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="c1">// --- 解析邏輯結束 ---</span>

        <span class="c1">// TFT 顯示情緒</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span> <span class="c1">// 清除螢幕</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Emotion:"</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">detectedEmotion</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">""</span><span class="p">);</span> <span class="c1">// 空行</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Playing:"</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">recommendedSongFilename</span><span class="p">);</span>
        
        <span class="c1">// 播放推薦的歌曲</span>
        <span class="n">sdPlayMP3</span><span class="p">(</span><span class="s">"mp3/"</span> <span class="o">+</span> <span class="n">recommendedSongFilename</span><span class="p">);</span>

        <span class="c1">// 按鈕防抖和冷卻</span>
        <span class="c1">// 這裡的 while 迴圈會等待按鈕釋放，然後再延遲</span>
        <span class="k">while</span><span class="p">(</span><span class="n">digitalRead</span><span class="p">(</span><span class="n">buttonPin</span><span class="p">)</span> <span class="o">==</span> <span class="n">HIGH</span><span class="p">){</span> 
            <span class="n">delay</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> 

        <span class="c1">// 在下一次循環開始前，顯示「Press button to scan」</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">clr</span><span class="p">();</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Music Player"</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">setCursor</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">40</span><span class="p">);</span>
        <span class="n">tft</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Press button to scan"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<h2 id="實作成果">實作成果</h2>

<h3 id="照片">照片</h3>

<p><strong>示範照</strong></p>

<p><img src="/assets/photo/Edge-Ai-Class-Project/AI情緒感知音樂播放器/178626_0.jpg" alt="imag" />
<img src="/assets/photo/Edge-Ai-Class-Project/AI情緒感知音樂播放器/178625_0.jpg" alt="imag" /></p>

<h3 id="影片">影片</h3>

<ol>
  <li>Damo影片
Damo1<br />
<a href="https://www.youtube.com/watch?v=nc7NwauzBc0"><img src="https://img.youtube.com/vi/nc7NwauzBc0/0.jpg" alt="IMAGE ALT TEXT HERE" /></a><br />
點擊圖片播放
Damo2<br />
<a href="https://www.youtube.com/watch?v=JS7wE3yyeiU"><img src="https://img.youtube.com/vi/JS7wE3yyeiU/0.jpg" alt="IMAGE ALT TEXT HERE" /></a><br />
點擊圖片播放</li>
</ol>]]></content><author><name>Li Kai_Huang</name><email>moray.huang@gmail.com</email></author><category term="1131邊緣運算課" /><category term="入門" /><category term="學習" /><category term="blog" /><summary type="html"><![CDATA[這篇文章會講解我邊緣運算的第五個專案 AI 情緒感知音樂播放器]]></summary></entry></feed>